{
    "result": {
        "article": {
            "commentCount": 1,
            "contentElements": [],
            "contentHtml": "<p>안녕하세요?<br />여러분들의&nbsp;뇌에&nbsp;기초적인&nbsp;프로그래밍&nbsp;구조를&nbsp;넣어주기&nbsp;위해서&nbsp;온&nbsp;SuYong입니다<br /><br />봇을&nbsp;만들기전에&nbsp;뭔저&nbsp;사용방법을&nbsp;익혀야겠죠?&nbsp;이전까지&nbsp;강좌가&nbsp;키보드로&nbsp;타자치는법을&nbsp;알려준&nbsp;강좌라면,&nbsp;지금&nbsp;제가쓰는&nbsp;강좌는&nbsp;타자를&nbsp;&quot;잘&quot;&nbsp;치게&nbsp;해주는&nbsp;강좌입니다.<br /><br />물론&nbsp;타자를&nbsp;못치셔도&nbsp;상관없습니다.<br /><br />일단&nbsp;이&nbsp;강의는&nbsp;프로그래밍에&nbsp;필요한&nbsp;대표적인&nbsp;기술이나&nbsp;개념을&nbsp;제시하고,&nbsp;그에대한&nbsp;정의,&nbsp;사용방법,&nbsp;왜&nbsp;사용하는가,&nbsp;예시&nbsp;순으로&nbsp;나열할&nbsp;예정입니다.(정의는&nbsp;딱딱한&nbsp;사전적&nbsp;의미가아닌&nbsp;제가&nbsp;따로&nbsp;명명할&nbsp;예정입니다.&nbsp;제대로&nbsp;코딩을&nbsp;배우고&nbsp;싶은분들은&nbsp;검색해서&nbsp;제대로된&nbsp;의미를&nbsp;찾으세요!)&nbsp;이것들을&nbsp;이해하시면&nbsp;다른&nbsp;카카오봇에서&nbsp;왜&nbsp;API를&nbsp;저렇게&nbsp;귀찮고&nbsp;힘들게&nbsp;만들어놨는지&nbsp;이해가&nbsp;되실겁니다.<br /><br />깊숙히&nbsp;알려주는&nbsp;내용,&nbsp;굳이&nbsp;이런거까지&nbsp;알아야해?라고&nbsp;의문이&nbsp;드는&nbsp;내용은&nbsp;[고급]이라고&nbsp;표시를&nbsp;하겠습니다&nbsp;[고급&gt;&nbsp;여기에&nbsp;내용이&nbsp;추가됩니다&nbsp;&lt;고급]&nbsp;이사이의&nbsp;내용은&nbsp;고급진&nbsp;내용입니다.<br /><br />-----------------------------<br /><br />목차<br />&nbsp;*&nbsp;변수<br />&nbsp;&nbsp;&nbsp;&gt;&nbsp;기본<br />&nbsp;&nbsp;&nbsp;&gt;&nbsp;자료형<br />&nbsp;&nbsp;&nbsp;&gt;&nbsp;실전<br />&nbsp;*&nbsp;함수<br />&nbsp;&nbsp;&nbsp;&gt;&nbsp;기본<br />&nbsp;&nbsp;&nbsp;&gt;&nbsp;익명함수&nbsp;+&nbsp;arrow&nbsp;function<br />&nbsp;*&nbsp;콜백<br />&nbsp;&nbsp;&nbsp;&gt;&nbsp;기본<br />&nbsp;&nbsp;&nbsp;&gt;&nbsp;Promise<br />&nbsp;*&nbsp;<br /><br />-----------------------------<br /><br />4.&nbsp;함수(Function)&nbsp;- 기본<br /><br />Object중 가장 많이쓰이는 타입중 하나입니다. Object에도 Array랑 function처럼 타입이 나뉘는데 정말 많이쓰는 타입입니다<br /><br />사실 js는 function만 잘써도 반은 먹고들어갑니다<br /><br />&gt;&nbsp;정의<br />미리 밑밥깔고 들어갑니다. 실제로 쓰는 함수의 정의와 굉장히 다릅니다. 제가 이해하고 있는 방식으로 설명하는거라서...<br /><br />함수: JS의 파일을 코드로 나타낸것, 블록 단위로 소스를 묶어서 표현한 것<br /><br />다시한번 말하지만 이건 제가 이해하고 있는, 함수의 이해를 돕는 가장 빠른 방법으로 정의를 만든것입니다. 정확하게 알고싶으시다면 공식 레퍼런스에서 함수를 검색하셔서 정의를 확인바랍니다.<br /><br />&gt;&nbsp;사용방법<br />함수는 대게 일반적인 함수랑 익명함수(Lambda)로 나뉩니다. 여기서는 기본함수를 살펴볼껀데 사용방법은 이러합니다.<br /><br />function 함수이름(인자들) {<br /> // 소스<br />}<br /><br />하나하나 분석 하겠습니다.<br /><br />함수이름은 말그대로 함수의 이름입니다. 함수가 Object타입인건 아시죠? Object타입을 선언할때<br /><br />var a = {<br />  //...<br />}<br /><br />이런식으로 선언한다고 하면 a는 방금 생성한 Object의 이름이 되는거죠<br /><br />사실은 약간다릅니다. 위의 식에서 생성한 Object는 기기의 메모리에 저장이되는데, 이 메모리에 저장된 Object를 사용하기 위해서는 위치를 알아야합니다.<br /><br />그걸 주소값이라 부르는데 변수에 값을 할당할때 주소값을 할당하는 경우랑, 실제 값을 할당하는 경우랑 두개로 나뉘어 집니다.<br /><br />(사실 저것도 이해를 돕기위한 표현입니다. 사실과 다른부분이 있습니다만... 고급에서도 건너뛰는이유는 우리가 이걸로 대학가고 직업가질꺼 아니잖아요 그쵸?<br /><br />추가로 저도 C/C++를 공부한적이 없기때문에... 메모리 관리를 자동으로 해주는 요즘 언어만 해서 메모리 관리의 대한 내용은 잘 모릅니다)<br /><br />사실 예를 들어 설명하는게 가장 편합니다<br /><br />var a = 1<br />var b = a<br /><br />b += 1<br /><br />이렇게 소스를 짰을때는 a와 b의 값은 어떻게 될까요?<br /><br />a = 1, b = 2가 되게됩니다.<br /><br />var a = {<br />   name: &apos;hello&apos;<br />}<br />var b = a<br /><br />b.name = &apos;Hi&apos;<br /><br />이때는 a.name과 b.name의 값은 어떻게 될까요?<br /><br />a.name = &apos;hi&apos;, b.name = &apos;hi&apos;가 됩니다.<br /><br />아니 a를 바꾼게 아니라 b를 바꿨는데 왜 a가 바뀐거지?? 라고 생각이 드실탠데 이게 위에서 말한 주소를 저장하는 것과 실제 값을 저장하는 것의 차이입니다.<br /><br />var a = {<br />   name: &apos;hello&apos;<br />}<br />var b = a<br /><br />b.name = &apos;Hi&apos;<br /><br />위 소스에서 만들어진 오브젝트를 메모리 A위치에 저장했다 칩시다. 이때 변수 a는 메모리 A위치를 저장하고있습니다.<br /><br />읽을때는 메모리 A위치에서 값을 빼와서 보여주는거고, 값을 입력할때는 메모리 A위치에 값을 입력하는거죠<br /><br />여기서 b = a 구문이 중요합니다. b = a 라는 말은 b는 a의 값이다는 말인데, a는 메모리 A위치를 저장했죠? 따라서 b의 값은 메모리 A위치가 되는겁니다.<br /><br />즉 하나의 메모리 A위치에 들어있는 값을 두개의 변수 a, b가 나타내고 있는겁니다. 메모리 A를 지칭하는게 a와 b라는 거죠.<br /><br />따라서 b를 수정하면 메모리 A위치의 값을 수정하게 되고, a또한 메모리 A위치의 값을 사용하기 때문에 b와 a중 하나만 값을 바꿔도 공유되는겁니다.<br /><br />그럼 저기서 a와 b를 따로따로 쓰려면 어떻게해야하죠?<br /><br />복사해야죠 a의 구조를 그대로 복사해 메모리 B위치에 값을 저장하고 b의값은 메모리 B위치를 가지게 하면 됩니다.<br /><br />var a = {<br />   name: &apos;hello&apos;<br />}<br />var b = Object.create(a)<br /><br />b.name = &apos;Hi&apos;<br /><br />이렇게 하시면 a.name은 &apos;Hello&apos;, b.name은 &apos;Hi&apos;가 되게 됩니다.<br /><br />사실 이설명이 [고급]에 있었는데 좀 필요한것 같아서 [고급]태그를 없엤습니다. 이해가 안되더라도 괜찮습니다. 단지<br /><br />Object를 복사할때는 Object.create로 복사한다.<br />두개의 변수가 똑같은 값을 가지고 그 값을 공유할 수 있다.<br /><br />정도만 이해하시면 되겠습니다.<br /><br />다시 본론으로 돌아와서<br /><br />function 함수이름(인자들) {<br /> // 소스<br />}<br /><br />여기서 인자들은 무엇인가?에 대해 말해드리겠습니다.<br /><br />함수는 소스를 하나로 묶은거라 했죠. 근데 문제는 함수를 써먹을때 소스를 하나로 묶기만하면 너무 효율이 떨어집니다.<br /><br />카카오봇으로 예를들어봅시다. 카카오봇을 만들때 전체보기 메세지를 만들고 싶어요. 그럴때는 앞에 공백을 넣던가 해서 메세지를 길게 만들겠죠?<br /><br />그런데 사용할 때 마다 공백을 복붙하는건 너무 비효율적입니다. 하나로 묶어야겠죠?<br /><br />그렇다면 위에서 말한 함수: 소스를 하나로 묶어서 사용하는것이라고 말했기 때문에 한번 함수로 만들어봤습니다.<br /><br />근데... 공백을 복붙하는건 해결했는데 메세지는 어떻게 구분하죠?<br /><br />그러니까 A상황일때는 전체보기로 A를 보내고싶고 B상황일때는 전체보기로 B를 보내고싶은데 우리가 만든 함수는 그냥 전체보기로 보일만한 공백만 적혀있습니다.<br /><br />인자는 바로 이때 위력을 발휘합니다. 변수의 값을 연결시켜줍니다.<br /><br />함수의 정의, JS파일을 소스로 나타낸것에서 JS파일에는 처음에 기본적으로 선언한 변수가 있겠죠? 그 변수들이 인자의 역할과 동일하게 작용한다 보시면됩니다.<br /><br />값을 전달하고 연결하는 매개체죠. 예시를 보면서 이해하시면 됩니다<br /><br />function 함수이름(인자들) {<br /> // 소스<br />}<br /><br />마지막 소스부분을 봅시다.<br /><br />소스부분에서는 일반적인 소스를 쓰면되는데, return이란것만 설명하겠습니다.<br /><br />일반적으로 수학적인 함수는 뭐죠?<br /><br />x를 넣으면 y가 나온다죠. 근데 이때까지 위에서 설명한 함수는 x를 넣으면 어떤 작동을 한다 입니다. y가 나온다 부분은 없어요.<br /><br />return은 y가 나온다 부분입니다.<br /><br />return a를 적으면 이함수에 있는 변수 a를 내보내겠다라는 말이죠<br /><br />예시 살짝 보여드리겠습니다.<br /><br />function plus(a, b) {<br /> return a + b<br />}<br /><br />var s = plus(4, 5)<br /><br />변수 s의 값은 9입니다. 대충 이해가시죠?<br /><br />var s = plus(4, 5)에서 plus(4, 5)는 9와 같은값입니다. return 4 + 5에서 4 + 5부분과 같죠.<br /><br />&gt;&nbsp;왜&nbsp;쓰는가?<br />함수의 진가는 노가다를 줄이는데 있습니다. 소스를 묶어서 사용하는데 당연히 이득아닐까요?<br /><br />물론 리얼 개꿀은 익명함수와 콜백에 있습니다.<br /><br />(물론 콜백지옥이 탄생했지만...)<br /><br /><br />&gt;&nbsp;예제<br />function a() {<br />  print(&apos;대신귀&apos;)<br />  print(&apos;여운알&apos;)<br />  print(&apos;파카를&apos;)<br />  print(&apos;드리겟&apos;)<br />  print(&apos;습니다&apos;)<br />}<br /><br />a()<br />/* 출력으로<br /><br />대신귀<br />여운알<br />파카를<br />드리겟<br />습니다<br /><br />가 나옵니다.<br />*/<br /><br />function a(a, b) {<br />  print(&apos;대신귀&apos;)<br />  print(&apos;여운&apos; + a)<br />  print(b + &apos;를&apos;)<br />  print(&apos;드리겟&apos;)<br />  print(&apos;습니다&apos;)<br />}<br /><br />a(&apos;알&apos;, &apos;파카&apos;)<br />/* 출력값이 위에서 했던 값과 같습니다. */<br />a(&apos;고&apos;, &apos;인물&apos;)<br />/* 출력값이<br /><br />대신귀<br />여운고<br />인물을<br />드리겟<br />습니다<br /><br />입니다. 이해 되셨죠? */<br /><br />function plusminus(a, b, what) {<br />  if (what === &apos;plus&apos;) {<br />    return a + b<br />  } else if (what === &apos;minus&apos;) {<br />    return a - b<br />  } else {<br />    return &apos;what을 적으라구ㅡㅡ&apos;<br />  }<br />}<br /><br />plusminus(3, 7, &apos;plus&apos;)<br />// plusminus(3, 7, &apos;plus&apos;)값은 10과 같습니다<br />plusminus(7, 1, &apos;minus&apos;)<br />// plusminus(7, 1, &apos;minus&apos;)값은 6과 같습니다<br />plusminus(0, 0, &apos;에베베&apos;)<br />// plusminus(0, 0, &apos;에베베&apos;)값은 &apos;what을 적으라구ㅡㅡ&apos;와 같습니다.<br />plusminus(0, 3)<br />// plusminus(0, 3)값은 &apos;what을 적으라구ㅡㅡ&apos;와 같습니다<br /><br />function factorial(num) {<br />  if (num &lt;= 1) {<br />    return 1<br />  }<br /><br />  return num * factorial(num - 1)<br />}<br /><br />factorial(5)<br />/*<br />엥 factorial함수안에 또 factorial함수가 있네? 이건 무슨...이라고 생각하시겠죠<br /><br />factorial(5)를 보면<br />factorial(5)는 5 * factorial(4)값과 같습니다.<br />엥 factorial(4)가 있네요. 그럼 factorial(4)의값도 알아야겠죠?<br /><br />factorial(4) == 4 * factorial(3)<br />factorial(3) == 3 * factorial(2)<br />factorial(2) == 2 * factorial(1)<br />factorial(1) == 1<br /><br />이 값을 모두 대입하면 factorial(5) == 5*4*3*2*1의 값을 가집니다. 이런 함수를<br /><br />재귀함수<br /><br />라고 부릅니다.<br />*/<br /><br />-----------------------------<br /><br />기숙사 들어가서 강좌를 잘 못쓰게 됐습니다. 시간나면 쓰도록 할께요!<br /><br />이해 안되시는 부분 있으시면 질문 ㄱㄱ</p>",
            "decorator": {
                "isPlug": false,
                "isShowSuicideSaver": false
            },
            "existScrapAddContent": false,
            "gdid": "90000004_01C2B33B0000038700000000",
            "head": "중급",
            "headId": 20,
            "id": 903,
            "isAutoSourcing": true,
            "isBlind": false,
            "isDeleteParent": false,
            "isEnableExternal": true,
            "isEnableScrap": true,
            "isEnableSocialPlugin": true,
            "isGroupPurchase": false,
            "isMarket": false,
            "isNewComment": false,
            "isNotice": false,
            "isOpen": true,
            "isPersonalTrade": false,
            "isReadable": true,
            "isWriteComment": true,
            "menu": {
                "badMenu": false,
                "badMenuByRestrict": false,
                "boardType": "L",
                "id": 20,
                "menuType": "B",
                "name": "| 카카오톡 봇 강좌 |"
            },
            "readCount": 293,
            "refArticleId": 903,
            "replyListOrder": "",
            "scrapCount": 0,
            "subject": "JS의 기초와 뼈대를 잡는 문법 강의 - 함수: 기본",
            "template": {
                "isUse": false
            },
            "writeDate": 1550390503130,
            "writer": {
                "id": "tlatndyd2001",
                "image": {
                    "isAnimated": false,
                    "service": "BLOG",
                    "type": "c77_77",
                    "url": "https://blogpfthumb-phinf.pstatic.net/MjAxNzAxMTlfMjk1/MDAxNDg0NzU3NjU1OTg0.i3WaE6_UwjXL--if0A4KarFOoZKk_-azh0eEQkYBUrcg.WXqgCyCXaq9QDJxe6-QVsVXQzS0-gs9Shq_5aVtfCRcg.JPEG.tlatndyd2001/profileImage.jpg"
                },
                "memberLevelIconUrl": "https://cafe.pstatic.net/levelicon/1/13_130.gif",
                "memberLevelName": "챗봇 고수",
                "nick": "SuYong"
            }
        },
        "articleId": 903,
        "attaches": [],
        "authority": {
            "isDoLike": true,
            "isEnableAttachFileDownload": true,
            "isHeadModifiable": false,
            "isModify": false,
            "isMove": false,
            "isRemove": false,
            "isReport": true,
            "isRightClick": true,
            "isSharable": true,
            "isShowLike": true,
            "isShowReply": false,
            "isShowStatistics": false,
            "isStore": false,
            "isWrite": true,
            "isWriteComment": true,
            "isWriteReply": true
        },
        "cafe": {
            "exposeReservation": false,
            "hasPopularArticle": true,
            "id": 29537083,
            "image": {
                "service": "CAFE",
                "type": "f100_100",
                "url": "https://mcafethumb-phinf.pstatic.net/MjAxOTAyMjVfMTg5/MDAxNTUxMDg2MDc1OTY2.umN5Kq9Z2sFRSdAXyJ2sz9UAlE0ofXm-dWJIRbeRbvsg.i_KxnwZ-FvDMQLnpo0ZYMo0Zl9JjOAPGWozW-WnLXJQg.PNG.wltjdqls5304/image.png"
            },
            "introduction": "자바스크립트를 사용하는 카카오톡 봇 관련 커뮤니티 입니다.",
            "isDormant": false,
            "memberCount": 5247,
            "name": "카카오톡 봇 커뮤니티",
            "openType": "O",
            "pcCafeName": "카카오톡 봇 커뮤니티",
            "url": "nameyee",
            "usingMemberLevel": true
        },
        "cafeId": 29537083,
        "comments": {
            "alarm": {
                "isChecked": false,
                "isShow": true
            },
            "disableWriteReason": "",
            "items": [
                {
                    "content": "와...친절한 설명 감사해요",
                    "id": 53373315,
                    "isArticleWriter": false,
                    "isDeleted": false,
                    "isNew": false,
                    "isRef": false,
                    "isRemovable": false,
                    "refId": 53373315,
                    "updateDate": 1550405280000,
                    "writer": {
                        "id": "wltjdqls5304",
                        "image": {
                            "service": "CAFE",
                            "type": "c77_77",
                            "url": "https://ssl.pstatic.net/static/cafe/cafe_pc/default/cafe_profile_77.png"
                        },
                        "nick": "성빈"
                    }
                }
            ]
        },
        "editorVersion": "LEGACY",
        "errorCode": null,
        "heads": [
            {
                "head": "초급",
                "headId": 5
            },
            {
                "head": "응용",
                "headId": 7
            },
            {
                "head": "중급",
                "headId": 20
            },
            {
                "head": "고급",
                "headId": 21
            },
            {
                "head": "기타",
                "headId": 39
            },
            {
                "head": "팁",
                "headId": 54
            }
        ],
        "isReadOnlyMode": false,
        "isW800": false,
        "readOnlyModeInfo": {
            "emergency": false,
            "linkToNoticeURL": "https://section.cafe.naver.com/cafe-home/cafe-notice?noticeId=1650",
            "readOnlyNoticeDuration": "",
            "timeToNotice": false,
            "timeToPreNotice": false
        },
        "tags": []
    }
}