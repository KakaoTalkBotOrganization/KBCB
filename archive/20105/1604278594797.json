{
    "result": {
        "article": {
            "commentCount": 6,
            "contentElements": [],
            "contentHtml": "<span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">/* ---------- Prototype Method ---------- */</span><br /><br /><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">Function.prototype.method = function (name, func) {</span><br /><blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">this.prototype[name] || (this.prototype[name] = func);</span></blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">};</span><br /><br /><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">/* ---------- File Class ---------- */</span><br /><br /><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">const File = function (path) {</span><br /><blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">this.path = path;</span></blockquote><blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">this._isJson = false;</span></blockquote><blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">this.value = &apos;&apos;;</span></blockquote><blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">this.save();</span></blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">};</span><br /><br /><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">File.method(&apos;setJson&apos;, function () {</span><br /><blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">this._isJson = true;</span></blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">});</span><br /><br /><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">File.method(&apos;releaseJson&apos;, function () {</span><br /><blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">this._isJson = false;</span></blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">});</span><br /><br /><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">File.method(&apos;isJson&apos;, function () {</span><br /><blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">return this._isJson;</span></blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">});</span><br /><br /><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">File.method(&apos;save&apos;, function () {</span><br /><blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">const sdcard = android.os.Environment.getExternalStorageDirectory().getAbsolutePath();</span></blockquote><br /><blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">let a = new java.io.File(sdcard + &apos;/&apos; + this.path),</span></blockquote><blockquote><blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">b = new java.io.FileOutputStream(a),</span></blockquote></blockquote><blockquote><blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">c = new java.lang.String(this._isJson ? JSON.stringify(this.value) : this.value);</span></blockquote></blockquote><br /><blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">if (!a.exists()) {</span></blockquote><blockquote><blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">a.getParentFile().mkdirs();</span></blockquote></blockquote><blockquote><blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">a.createNewFile();</span></blockquote></blockquote><blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">}</span></blockquote><br /><blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">b.write(c.getBytes());</span></blockquote><blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">b.close();</span></blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">});</span><br /><br /><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">File.method(&apos;load&apos;, function () {</span><br /><blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">const sdcard = android.os.Environment.getExternalStorageDirectory().getAbsolutePath();</span></blockquote><br /><blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">let a = new java.io.File(sdcard + &apos;/&apos; + this.path);</span></blockquote><br /><blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">if (!a.exists()) return null;</span></blockquote><br /><blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">let b = new java.io.FileInputStream(a),</span></blockquote><blockquote><blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">c = new java.io.InputStreamReader(b),</span></blockquote></blockquote><blockquote><blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">d = new java.io.BufferedReader(c),</span></blockquote></blockquote><blockquote><blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">e = d.readLine(),</span></blockquote></blockquote><blockquote><blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">f = &apos;&apos;;</span></blockquote></blockquote><br /><blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">while ((f = d.readLine()) !== null) e += (&apos;\\n&apos; + f);</span></blockquote><blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\"><br /></span></blockquote><blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">b.close();</span></blockquote><blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">c.close();</span></blockquote><blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">d.close();</span></blockquote><br /><blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">this.value = (this._isJson ? JSON.parse(e) : e);</span></blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">});</span><br /><br /><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">File.method(&apos;write&apos;, function (value) {</span><br /><blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">this.value = value;</span></blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">});</span><br /><br /><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">File.method(&apos;read&apos;, function () {</span><br /><blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">return this.value;</span></blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">});</span><br /><br /><br /><br /><br /><br /><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">/* 사용법 :</span><br /><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">* 1) 스크립트의 상단에 붙여넣기</span><br /><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">* 2) 전역에 변수(상수) 생성하기</span><br /><blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">let file = new File(&apos;Bot/Game/RPG.txt&apos;);</span></blockquote><blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">&bull; sdcard 는 적지 마세요 &bull;</span></blockquote><br /><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">* 3) 저장할 내용의 타입 확인하기</span><br /><blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">만약 객체라면</span></blockquote><blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">file.setJson(); 하기 (전역에서 처리)</span></blockquote><blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">&bull; json 타입으로 지정해주면</span></blockquote><blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">save 할 때 문자열화, load 할 때 파싱 처리 &bull;</span></blockquote><br /><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">* 4) 메서드 사용하기</span><br /><blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">&bull; file.write(content);</span></blockquote><blockquote><blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">//content 를 임시 파일에 할당합니다.</span></blockquote></blockquote><blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">&bull; file.read();</span></blockquote><blockquote><blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">//임시 파일에 저장되어 있는 값을 읽어옵니다.</span></blockquote></blockquote><blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">&bull; file.save();</span></blockquote><blockquote><blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">//임시 파일의 값을 지정한 경로에 저장합니다.</span></blockquote></blockquote><blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">&bull; file.load();</span></blockquote><blockquote><blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">//지정한 경로에 저장된 값을</span></blockquote></blockquote><blockquote><blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">임시 파일에 할당합니다.</span></blockquote></blockquote><blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">&bull; file.isJson();</span></blockquote><blockquote><blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">//저장할 내용의 타입이 json 인지를 반환합니다.</span></blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">&bull; file.setJson();</span></blockquote><blockquote><blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">//저장할 내용의 타입을 json 으로 지정합니다.</span></blockquote></blockquote><blockquote><blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">save 할 때 문자열화,</span></blockquote></blockquote><blockquote><blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">load 할 때 파싱 처리를 합니다.</span></blockquote></blockquote><blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">&bull; file.release();</span></blockquote><blockquote><blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">//저장할 내용의 타입을 기본으로 지정합니다.</span></blockquote></blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\"><div><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\"><br /></span></div>* 5) 본 게시글의 저작자는 AlphaDo 입니다.<br /></span><blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">수정은 자유이나, 본인이 만들었다고 하시면</span></blockquote><blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">바나나킥을 날려줍니다.</span></blockquote><br /><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">* 6) 피드백은 환영합니다. 잘못된 부분이 있다면</span><br /><blockquote><span style=\"color: rgb(102, 102, 102); font-family: 돋움, dotum, Helvetica, sans-serif; font-size: 12px;\">맞을 준비가 되어있습니다. */</span></blockquote>",
            "decorator": {
                "isPlug": false,
                "isShowSuicideSaver": false
            },
            "existScrapAddContent": false,
            "gdid": "90000004_01C2B33B00004E8900000000",
            "head": "고급",
            "headId": 101,
            "id": 20105,
            "isAutoSourcing": false,
            "isBlind": false,
            "isDeleteParent": false,
            "isEnableExternal": true,
            "isEnableScrap": true,
            "isEnableSocialPlugin": true,
            "isGroupPurchase": false,
            "isMarket": false,
            "isNewComment": false,
            "isNotice": false,
            "isOpen": true,
            "isPersonalTrade": false,
            "isReadable": true,
            "isWriteComment": true,
            "menu": {
                "badMenu": false,
                "badMenuByRestrict": false,
                "boardType": "L",
                "id": 143,
                "menuType": "B",
                "name": "| 소스 공유 |"
            },
            "readCount": 347,
            "refArticleId": 20105,
            "replyListOrder": "",
            "scrapCount": 0,
            "subject": "본격 FileStream 대체하는 소스",
            "template": {
                "isUse": false
            },
            "writeDate": 1592793326060,
            "writer": {
                "id": "dsy2761",
                "image": {
                    "isAnimated": false,
                    "service": "CAFE",
                    "type": "c77_77",
                    "url": "https://cafethumb.pstatic.net/MjAxOTExMTRfMjcy/MDAxNTczNjc1MDE4MzE1.xTQI54tOUEO0syvnkIH0HtOOqlPrLi11LShvYF5Y7-Ug.gvo5g0oyWB3F7T61gRFGZrLBZtIQP73GcsCNNg5l7L0g.JPEG/externalFile.jpg"
                },
                "memberLevelIconUrl": "https://cafe.pstatic.net/levelicon/1/13_888.gif",
                "memberLevelName": "부 매니저",
                "nick": "AlphaDo"
            }
        },
        "articleId": 20105,
        "attaches": [],
        "authority": {
            "isDoLike": true,
            "isEnableAttachFileDownload": true,
            "isHeadModifiable": false,
            "isModify": false,
            "isMove": false,
            "isRemove": false,
            "isReport": true,
            "isRightClick": true,
            "isSharable": true,
            "isShowLike": true,
            "isShowReply": false,
            "isShowStatistics": false,
            "isStore": false,
            "isWrite": true,
            "isWriteComment": true,
            "isWriteReply": true
        },
        "cafe": {
            "exposeReservation": false,
            "hasPopularArticle": true,
            "id": 29537083,
            "image": {
                "service": "CAFE",
                "type": "f100_100",
                "url": "https://mcafethumb-phinf.pstatic.net/MjAxOTAyMjVfMTg5/MDAxNTUxMDg2MDc1OTY2.umN5Kq9Z2sFRSdAXyJ2sz9UAlE0ofXm-dWJIRbeRbvsg.i_KxnwZ-FvDMQLnpo0ZYMo0Zl9JjOAPGWozW-WnLXJQg.PNG.wltjdqls5304/image.png"
            },
            "introduction": "자바스크립트를 사용하는 카카오톡 봇 관련 커뮤니티 입니다.",
            "isDormant": false,
            "memberCount": 5248,
            "name": "카카오톡 봇 커뮤니티",
            "openType": "O",
            "pcCafeName": "카카오톡 봇 커뮤니티",
            "url": "nameyee",
            "usingMemberLevel": true
        },
        "cafeId": 29537083,
        "comments": {
            "alarm": {
                "isChecked": false,
                "isShow": true
            },
            "disableWriteReason": "",
            "items": [
                {
                    "content": "ㅗㅜㅑ",
                    "id": 94424134,
                    "isArticleWriter": false,
                    "isDeleted": false,
                    "isNew": false,
                    "isRef": false,
                    "isRemovable": false,
                    "refId": 94424134,
                    "updateDate": 1592793514000,
                    "writer": {
                        "id": "jinnyday0719",
                        "image": {
                            "isAnimated": false,
                            "service": "CAFE",
                            "type": "c77_77",
                            "url": "https://cafethumb.pstatic.net/MjAyMDEwMTdfMTcx/MDAxNjAyOTQ2MDIzMzAw.a1mEI4EpeDbk8J6sLw5CkdLqVQlDrpmoMOlCejozz7kg.JVmyla18yTNADc733cXr_-hOhQbVbhCC7xE1Bx6eBQIg.JPEG/externalFile.jpg"
                        },
                        "nick": "ㅇㅅㅈ"
                    }
                },
                {
                    "content": "ㅓㅜㅑ",
                    "id": 94426544,
                    "isArticleWriter": false,
                    "isDeleted": false,
                    "isNew": false,
                    "isRef": false,
                    "isRemovable": false,
                    "refId": 94426544,
                    "updateDate": 1592795119000,
                    "writer": {
                        "id": "josephk0812",
                        "image": {
                            "isAnimated": false,
                            "service": "CAFE",
                            "type": "c77_77",
                            "url": "https://cafethumb.pstatic.net/MjAyMDAzMTdfNDIg/MDAxNTg0NDQyNDQ5MDM3.ROxwb7sGrQJ_WF2vaN9nQzY86S90MC2S0jofEMPWSgog.8XgEW0etU_W4GMZ1Ba75ht8yTCVbNnhcERu6FtnsVHEg.JPEG/20191129_230800.jpg"
                        },
                        "nick": "ailla"
                    }
                },
                {
                    "content": "?",
                    "id": 94432549,
                    "isArticleWriter": false,
                    "isDeleted": false,
                    "isNew": false,
                    "isRef": false,
                    "isRemovable": false,
                    "refId": 94432549,
                    "updateDate": 1592799335000,
                    "writer": {
                        "id": "port_side0707",
                        "image": {
                            "service": "CAFE",
                            "type": "c77_77",
                            "url": "https://ssl.pstatic.net/static/cafe/cafe_pc/default/cafe_profile_77.png"
                        },
                        "nick": "윤 위해 웃어줘"
                    }
                },
                {
                    "content": "정말 위대합니다!",
                    "id": 94434187,
                    "isArticleWriter": false,
                    "isDeleted": false,
                    "isNew": false,
                    "isRef": false,
                    "isRemovable": false,
                    "refId": 94434187,
                    "updateDate": 1592800401000,
                    "writer": {
                        "id": "williameom0826",
                        "image": {
                            "isAnimated": false,
                            "service": "CAFE",
                            "type": "c77_77",
                            "url": "https://cafethumb.pstatic.net/MjAyMDA0MDJfMTU1/MDAxNTg1Nzg4NjczNzY1.P0yIN6FJ_f49z-WPSTHegCrZTR-B-hK8YwVgconwsFEg.4fBP8ETOdeLTnaf5v2Ph6SpT27lsVPpHwd2jGpiufPEg.JPEG/externalFile.jpg"
                        },
                        "nick": "williameom"
                    }
                },
                {
                    "content": "4년전에 만든거",
                    "id": 94458259,
                    "isArticleWriter": false,
                    "isDeleted": false,
                    "isNew": false,
                    "isRef": false,
                    "isRemovable": false,
                    "refId": 94458259,
                    "updateDate": 1592817936000,
                    "writer": {
                        "id": "sungbin_dev",
                        "image": {
                            "isAnimated": false,
                            "service": "CAFE",
                            "type": "c77_77",
                            "url": "https://cafethumb.pstatic.net/MjAyMDEwMzBfMzUg/MDAxNjA0MDMwMDYwNzM5.kjePgFoxEs7f_8UwkpF6JtLFx2dFUz9gNtlwgrEPzwEg.agBPDgSw14rZWK1sN50QMz9ncBqE0I9DIq22M9ESoE4g.PNG/z.png"
                        },
                        "nick": "성빈"
                    }
                },
                {
                    "content": "생성자 수정해야 하군",
                    "id": 95970018,
                    "isArticleWriter": true,
                    "isDeleted": false,
                    "isNew": false,
                    "isRef": false,
                    "isRemovable": false,
                    "refId": 95970018,
                    "updateDate": 1594084274000,
                    "writer": {
                        "id": "dsy2761",
                        "image": {
                            "isAnimated": false,
                            "service": "CAFE",
                            "type": "c77_77",
                            "url": "https://cafethumb.pstatic.net/MjAxOTExMTRfMjcy/MDAxNTczNjc1MDE4MzE1.xTQI54tOUEO0syvnkIH0HtOOqlPrLi11LShvYF5Y7-Ug.gvo5g0oyWB3F7T61gRFGZrLBZtIQP73GcsCNNg5l7L0g.JPEG/externalFile.jpg"
                        },
                        "nick": "AlphaDo"
                    }
                }
            ]
        },
        "editorVersion": "LEGACY",
        "errorCode": null,
        "heads": [
            {
                "head": "미니게임",
                "headId": 70
            },
            {
                "head": "RPG",
                "headId": 71
            },
            {
                "head": "파싱",
                "headId": 72
            },
            {
                "head": "혼합",
                "headId": 73
            },
            {
                "head": "기타",
                "headId": 74
            },
            {
                "head": "모듈",
                "headId": 80
            },
            {
                "head": "카톡봇",
                "headId": 83
            },
            {
                "head": "함수",
                "headId": 90
            },
            {
                "head": "고급",
                "headId": 101
            },
            {
                "head": "중급",
                "headId": 102
            },
            {
                "head": "초급",
                "headId": 103
            },
            {
                "head": "태그",
                "headId": 106
            }
        ],
        "isReadOnlyMode": false,
        "isW800": true,
        "readOnlyModeInfo": {
            "emergency": false,
            "linkToNoticeURL": "https://section.cafe.naver.com/cafe-home/cafe-notice?noticeId=1650",
            "readOnlyNoticeDuration": "",
            "timeToNotice": false,
            "timeToPreNotice": false
        },
        "tags": []
    }
}