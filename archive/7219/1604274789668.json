{
    "result": {
        "article": {
            "commentCount": 0,
            "contentElements": [
                {
                    "json": {
                        "from": "MOBILEWEB",
                        "image": {
                            "height": 1603,
                            "service": "CAFE",
                            "style": "width:1080px; height:2340px;",
                            "type": "w740",
                            "url": "https://mcafethumb-phinf.pstatic.net/MjAxOTExMDJfMjE0/MDAxNTcyNjY1NzM2ODE2.9wSWm9dGwygSkpO4CQLdJTpSOTPBznUbKK34ZhKIl28g.-NFUnigXx9udKTxKuG2QTmaWc-VTyjrSIVtNr2dgRkog.JPEG/Screenshot_20191102-123009_MessengerBot.jpg",
                            "width": 740
                        }
                    },
                    "type": "IMAGE"
                }
            ],
            "contentHtml": "<p>&nbsp;</p><div class=\"NHN_Writeform_Main\"><div><b>질문할 어플 </b>(새자봇, 젤브봇, 메신저봇, 닼토봇, 기타)<div><b>=&gt; 메봇 r</b></div></div><b></b><div><b><b><br /></b></b></div><b>질문할 소스</b><div><b>=&gt;&nbsp;</b></div><div><div style=\"\"><b>//ssh 무시를 위한 함수 선언</b></div><div style=\"\"><b>importPackage(javax.net.ssl);</b></div><div style=\"\"><b>importPackage(java.lang);</b></div><div style=\"\"><b>importPackage(java.net);</b></div><div style=\"\"><b>importPackage(java.io);</b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b>function getWebText(link, value)</b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b>{</b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b>&nbsp; &nbsp; try</b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b>&nbsp; &nbsp; {</b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b>&nbsp; &nbsp; &nbsp; &nbsp; if (android.os.Build.VERSION.SDK_INT &gt; 9)&nbsp;</b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b>&nbsp; &nbsp; &nbsp; &nbsp; {</b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; var policy = new android.os.StrictMode.ThreadPolicy.Builder().permitAll().build();</b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; android.os.StrictMode.setThreadPolicy(policy);</b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b>&nbsp; &nbsp; &nbsp; &nbsp; }</b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b>&nbsp; &nbsp; &nbsp; &nbsp; if (value)</b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b>&nbsp; &nbsp; &nbsp; &nbsp; {</b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; try</b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; let sslContext = javax.net.ssl.SSLContext.getInstance(&quot;SSL&quot;);</b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; sslContext.init(null, [new JavaAdapter(javax.net.ssl.X509TrustManager, {</b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; getAcceptedIssuers : () =&gt; { return null; },</b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; checkClientTrusted : () =&gt; { return ; },</b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; checkServerTrusted : () =&gt; { return ; },</b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; })], new java.security.SecureRandom());</b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; HttpsURLConnection.setDefaultSSLSocketFactory(sslContext.getSocketFactory());</b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; HttpsURLConnection.setDefaultHostnameVerifier(new JavaAdapter(javax.net.ssl.HostnameVerifier, {</b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; verify : (hostname, session) =&gt; { return true; }</b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }));</b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; catch (e) { return e; }</b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b>&nbsp; &nbsp; &nbsp; &nbsp; }</b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b>&nbsp; &nbsp; &nbsp; &nbsp; var url = new java.net.URL(link),</b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; connect = url.openConnection();</b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b>&nbsp; &nbsp; &nbsp; &nbsp; if(connect != null)</b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b>&nbsp; &nbsp; &nbsp; &nbsp; {</b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; connect.setConnectTimeout(5000);</b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; connect.setUseCaches(false);</b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; var inputStreamReader = new java.io.InputStreamReader(connect.getInputStream()),</b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; bufferedReader = new java.io.BufferedReader(inputStreamReader),</b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; text = bufferedReader.readLine(), line = &quot;&quot;;</b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; while((line = bufferedReader.readLine()) != null)</b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; {</b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; text += &quot;\\n&quot; + line;</b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; inputStreamReader.close();</b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; bufferedReader.close();</b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; connect.disconnect();</b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b>&nbsp; &nbsp; &nbsp; &nbsp; }</b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b>&nbsp; &nbsp; &nbsp; &nbsp; return text.toString();</b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b>&nbsp; &nbsp; }</b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b>&nbsp; &nbsp; catch(e) { return e; }</b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b>};</b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b>/*------------------------------------*/</b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b>//변수 선언</b></div><div style=\"\"><b>var wordlist=JSON.parse(getWebText(&quot;https://ttyy3388.josbar.io/getData.php?type=WordList&amp;value=null&quot;,true));//단어 목록</b></div><div style=\"\"><b>var startwordlist=JSON.parse(getWebText(&quot;https://ttyy3388.josbar.io/getData.php?type=StartWord&amp;value=null&quot;,true));//시작하는 단어 목록</b></div><div style=\"\"><b>var useword=[];//사용 단어</b></div><div style=\"\"><b>var nowusers={};//현재 끝말잇기방에 있는 사람</b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b>//함수 선언</b></div><div style=\"\"><b>function twosound(lastChar)</b></div><div style=\"\"><b>{</b></div><div style=\"\"><b><span style=\"white-space:pre\"> </span>let data = lastChar.charCodeAt() - 0xAC00;</b></div><div style=\"\"><b><span style=\"white-space:pre\"> </span>if (data &lt; 0 || data &gt; 11171) return ;</b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b><span style=\"white-space:pre\"> </span>const RIEUL_TO_NIEUN = [4449, 4450, 4457, 4460, 4462, 4467];</b></div><div style=\"\"><b><span style=\"white-space:pre\"> </span>const RIEUL_TO_IEUNG = [4451, 4455, 4456, 4461, 4466, 4469];</b></div><div style=\"\"><b><span style=\"white-space:pre\"> </span>const NIEUN_TO_IEUNG = [4455, 4461, 4466, 4469];</b></div><div style=\"\"><span style=\"white-space:pre\"><b> </b></span></div><div style=\"\"><b><span style=\"white-space:pre\"> </span>let<span style=\"white-space:pre\"> </span>onset = Math.floor(data / 28 / 21) + 0x1100,</b></div><div style=\"\"><b><span style=\"white-space:pre\">  </span>nucleus = (Math.floor(data / 28) % 21) + 0x1161,&nbsp;</b></div><div style=\"\"><b><span style=\"white-space:pre\">  </span>coda = (data % 28) + 0x11A7, isDoumChar = false, doumChar;</b></div><div style=\"\"><span style=\"white-space:pre\"><b> </b></span></div><div style=\"\"><b><span style=\"white-space:pre\"> </span>if (onset == 4357)</b></div><div style=\"\"><b><span style=\"white-space:pre\"> </span>{</b></div><div style=\"\"><b><span style=\"white-space:pre\">  </span>isDoumChar = true;</b></div><div style=\"\"><b><span style=\"white-space:pre\">  </span>(RIEUL_TO_NIEUN.indexOf(nucleus) != -1) ? onset = 4354 : (RIEUL_TO_IEUNG.indexOf(nucleus) != -1) ? onset = 4363 : isDoumChar = false;</b></div><div style=\"\"><b><span style=\"white-space:pre\"> </span>}</b></div><div style=\"\"><b><span style=\"white-space:pre\"> </span>else if (onset == 4354)</b></div><div style=\"\"><b><span style=\"white-space:pre\"> </span>{</b></div><div style=\"\"><b><span style=\"white-space:pre\">  </span>if (NIEUN_TO_IEUNG.indexOf(nucleus) != -1)</b></div><div style=\"\"><b><span style=\"white-space:pre\">  </span>{</b></div><div style=\"\"><b><span style=\"white-space:pre\">   </span>onset = 4363;</b></div><div style=\"\"><b><span style=\"white-space:pre\">   </span>isDoumChar = true;</b></div><div style=\"\"><b><span style=\"white-space:pre\">  </span>}</b></div><div style=\"\"><b><span style=\"white-space:pre\"> </span>}</b></div><div style=\"\"><b><span style=\"white-space:pre\"> </span>if (isDoumChar)</b></div><div style=\"\"><b><span style=\"white-space:pre\"> </span>{</b></div><div style=\"\"><b><span style=\"white-space:pre\">  </span>onset -= 0x1100; nucleus -= 0x1161; coda -= 0x11A7;</b></div><div style=\"\"><b><span style=\"white-space:pre\">  </span>doumChar = String.fromCharCode(((onset * 21) + nucleus) * 28 + coda + 0xAC00);</b></div><div style=\"\"><b><span style=\"white-space:pre\"> </span>}</b></div><div style=\"\"><span style=\"white-space:pre\"><b> </b></span></div><div style=\"\"><b>&nbsp; &nbsp; return doumChar;</b></div><div style=\"\"><b>};</b></div><div style=\"\"><b>/*----------------------------*/</b></div><div style=\"\"><b>function AI(lastword){</b></div><div style=\"\"><b>if(twosound(lastword)==undefined){ var list=startwordlist[lastword]; Api.replyRoom(&quot;test&quot;,&quot;1&quot;);}else{ var list=startwordlist[twosound(lastword)]; Api.replyRoom(&quot;test&quot;,&quot;2&quot;);}</b></div><div style=\"\"><b>Api.replyRoom(&quot;test&quot;,list.length);</b></div><div style=\"\"><b>var i=0</b></div><div style=\"\"><b>while(true){</b></div><div style=\"\"><b>if(useword.indexOf(list[i])!=-1){</b></div><div style=\"\"><b>Api.replyRoom(&quot;test&quot;,&quot;done : &quot;+list[i]);</b></div><div style=\"\"><b>return list[i];</b></div><div style=\"\"><b>}</b></div><div style=\"\"><b>i++</b></div><div style=\"\"><b>if(i&gt;list.length-1) break;</b></div><div style=\"\"><b>}</b></div><div style=\"\"><b>return &quot;GG&quot;;</b></div><div style=\"\"><b>}</b></div><div style=\"\"><b>/*-------------------------*/</b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b><br /></b></div><div style=\"\"><b>function response(room, msg, sender, isGroupChat, replier, ImageDB, packageName, threadld) {</b></div><div style=\"\"><b>if(msg.indexOf(&quot;eval &quot;)!=-1) msg=msg.substr(5); try{ var a=eval(msg); replier.reply(a); }catch(e){ replier.reply(e); }//finally{ return; }</b></div><div style=\"\"><b>var msgarray=msg.split(&quot;&quot;);</b></div><div style=\"\"><b>var lastword=msgarray[msgarray.length-1];</b></div><div style=\"\"><b>//replier.reply(msg);</b></div><div style=\"\"><b>if(wordlist.indexOf(msg)!=-1&amp;&amp;useword.indexOf(msg)&lt;=0){</b></div><div style=\"\"><b>replier.reply(msg+&quot;\\n&quot;+JSON.parse(getWebText(&quot;https://ttyy3388.josbar.io/getData.php?type=WordMean&amp;value=&quot;+msg,true))[0]+&quot;\\n다음사람은 &quot;+lastword+&quot;로 시작하는 단어를 입력해 주세요.&quot;);</b></div><div style=\"\"><b>replier.reply(AI(lastword));</b></div><div style=\"\"><b>}else if(useword.indexOf(msg)!=-1){</b></div><div style=\"\"><b>replier.reply(&quot;이미 사용된 단어 입니다.&quot;);</b></div><div style=\"\"><b>}else if(wordlist.indexOf(msg)==-1){</b></div><div style=\"\"><b>replier.reply(&quot;사전에 없는 단어 입니다.&quot;+wordlist.indexOf(msg));</b></div><div style=\"\"><b>}</b></div><div style=\"\"><b>}</b></div></div><div><b><br /></b></div><div><b>질문내용</b></div><div><b>=&gt; <strike>브위님 사이트에서 배열을 뜯어와서</strike> 사용안한 단어를 뱉는 끝말잇기 소스인데 소스를 이렇게 만들었는데 다른 오류는 없고 바로 GG를 리턴하더라고요. 어떻게 하면 반복문이 일을 할까요?(Api.replyRoom하고 이발은 디버깅 목적으로 넣은겁니다.)</b></div><div><b>[[[CONTENT-ELEMENT-0]]]</b><p><b>&nbsp;</b></p><b><br /></b></div><div><b><br /></b></div><div><b><br /></b></div><div><b><br /></b></div><div><b><br /></b></div><div><b><br /></b></div><div><b><br /></b></div><div><span style=\"font-family: dotum; font-size: 13.3333px; background-color: rgb(153, 220, 255);\">(말머리 등록 하셨나요? Yes / No)</span></div></div>",
            "decorator": {
                "isPlug": false,
                "isShowSuicideSaver": false
            },
            "existScrapAddContent": false,
            "gdid": "90000004_01C2B33B00001C3300000000",
            "id": 7219,
            "isAutoSourcing": true,
            "isBlind": false,
            "isDeleteParent": false,
            "isEnableExternal": true,
            "isEnableScrap": true,
            "isEnableSocialPlugin": true,
            "isGroupPurchase": false,
            "isMarket": false,
            "isNewComment": false,
            "isNotice": false,
            "isOpen": true,
            "isPersonalTrade": false,
            "isReadable": true,
            "isWriteComment": true,
            "menu": {
                "badMenu": false,
                "badMenuByRestrict": false,
                "boardType": "L",
                "id": 3,
                "menuType": "B",
                "name": "| 소스 질문 |"
            },
            "readCount": 244,
            "refArticleId": 7219,
            "replyListOrder": "",
            "scrapCount": 0,
            "subject": "[어쩌다 보니 해결완료] 반복문 씹어먹기?",
            "template": {
                "isUse": false
            },
            "writeDate": 1572665752857,
            "writer": {
                "id": "bass90301",
                "image": {
                    "isAnimated": false,
                    "service": "CAFE",
                    "type": "c77_77",
                    "url": "https://cafethumb.pstatic.net/MjAyMDEwMzBfMjkx/MDAxNjA0MDY0NzU3OTk2.H1BDzQTTrIcO_1-N11RdFRPjnkefXgkn6GvE54TR_4Ag.jW34JGliB99w-pvlFqWpO-QSzNncO5HLs-eAYMteMV8g.JPEG/externalFile.jpg"
                },
                "memberLevelIconUrl": "https://cafe.pstatic.net/levelicon/1/13_140.gif",
                "memberLevelName": "챗봇 마스터",
                "nick": "bass90301"
            }
        },
        "articleId": 7219,
        "attaches": [
            {
                "extension": "jpg",
                "fullName": "Screenshot_20191102-123009_MessengerBot.jpg",
                "hasCopyrightIssue": false,
                "hasLicenseIssue": false,
                "isBlind": false,
                "isInfected": false,
                "name": "Screenshot_2019...MessengerBot.jpg",
                "size": 259478,
                "suspendLayerName": "block_common",
                "type": "I",
                "url": "https://blogattach.naver.net/eb7ef74c546061d4f91d7a4e7297e09131639d1e/MjAxOTExMDJfMjE0/MDAxNTcyNjY1NzM2ODE2.9wSWm9dGwygSkpO4CQLdJTpSOTPBznUbKK34ZhKIl28g.-NFUnigXx9udKTxKuG2QTmaWc-VTyjrSIVtNr2dgRkog.JPEG/Screenshot_20191102-123009_MessengerBot.jpg?type=attachment"
            }
        ],
        "authority": {
            "isDoLike": true,
            "isEnableAttachFileDownload": true,
            "isHeadModifiable": false,
            "isModify": false,
            "isMove": false,
            "isRemove": false,
            "isReport": true,
            "isRightClick": true,
            "isSharable": true,
            "isShowLike": true,
            "isShowReply": false,
            "isShowStatistics": false,
            "isStore": false,
            "isWrite": true,
            "isWriteComment": true,
            "isWriteReply": true
        },
        "cafe": {
            "exposeReservation": false,
            "hasPopularArticle": true,
            "id": 29537083,
            "image": {
                "service": "CAFE",
                "type": "f100_100",
                "url": "https://mcafethumb-phinf.pstatic.net/MjAxOTAyMjVfMTg5/MDAxNTUxMDg2MDc1OTY2.umN5Kq9Z2sFRSdAXyJ2sz9UAlE0ofXm-dWJIRbeRbvsg.i_KxnwZ-FvDMQLnpo0ZYMo0Zl9JjOAPGWozW-WnLXJQg.PNG.wltjdqls5304/image.png"
            },
            "introduction": "자바스크립트를 사용하는 카카오톡 봇 관련 커뮤니티 입니다.",
            "isDormant": false,
            "memberCount": 5248,
            "name": "카카오톡 봇 커뮤니티",
            "openType": "O",
            "pcCafeName": "카카오톡 봇 커뮤니티",
            "url": "nameyee",
            "usingMemberLevel": true
        },
        "cafeId": 29537083,
        "comments": {
            "alarm": {
                "isChecked": false,
                "isShow": true
            },
            "disableWriteReason": "",
            "items": []
        },
        "editorVersion": "LEGACY",
        "errorCode": null,
        "heads": [
            {
                "head": "메신저봇",
                "headId": 57
            },
            {
                "head": "채팅자동봇",
                "headId": 58
            },
            {
                "head": "답변 완료",
                "headId": 99
            },
            {
                "head": "카링",
                "headId": 105
            }
        ],
        "isReadOnlyMode": false,
        "isW800": false,
        "readOnlyModeInfo": {
            "emergency": false,
            "linkToNoticeURL": "https://section.cafe.naver.com/cafe-home/cafe-notice?noticeId=1650",
            "readOnlyNoticeDuration": "",
            "timeToNotice": false,
            "timeToPreNotice": false
        },
        "tags": []
    }
}