{
    "result": {
        "article": {
            "commentCount": 6,
            "contentHtml": "<div class=\"se-viewer se-theme-default\" lang=\"ko-KR\">\n    <!-- SE_DOC_HEADER_START -->\n    <!--@CONTENTS_HEADER-->\n    <!-- SE_DOC_HEADER_END -->\n    <div class=\"se-main-container\">\n                <div class=\"se-component se-text se-l-default\" id=\"SE-685ee59c-861a-4102-8dcb-a23ef9f850d3\">\n                    <div class=\"se-component-content\">\n                        <div class=\"se-section se-section-text se-l-default\">\n                            <div class=\"se-module se-module-text\">\n\n                                    <!-- SE-TEXT { --><p class=\"se-text-paragraph se-text-paragraph-align- \" style=\"\" id=\"SE-de6bd036-ba32-40b7-9816-e3a10061633b\"><span style=\"\" class=\"se-fs- se-ff-   \" id=\"SE-58730ab9-7ff6-4f8a-82be-ac4795bfc680\">입력 n(1≤n≤10000, n은 정수)을 입력받고 띄어쓰기 또는 줄바꿈으로 구분되어있는 32비트 정수 자료형 안의 값을 받아야 한다고 가정해봅시다. 만약 아레와 같이 짠다면, 매우 비효율적입니다. n이 10000이라면 상관 없겠지만 만약 n이 1라면 9999 * sizeof(int)가 버어있는겁니다. 엄청 비효율적입니다!</span></p><!-- } SE-TEXT -->\n                            </div>\n                        </div>\n                    </div>\n                </div>                <div class=\"se-component se-code se-l-code_black\" id=\"SE-5e4a348e-6088-4b60-86d8-78a0a5728800\">\n                    <div class=\"se-component-content\">\n                        <div class=\"se-section se-section-code se-l-code_black\">\n                            <div class=\"se-module se-module-code se-fs-fs13\">\n                                <div class=\"se-code-source\">\n                                    <div class=\"__se_code_view language-javascript\">#include &lt;stdio.h&gt;\nint n, arr1[100000];\nint main(){\n    scanf(&quot;%d&quot;, &amp;n);\n    for(int i &#x3D; 0; i &lt; n; i++){\n        scanf(&quot;%d&quot;, &amp;arr1[i]);\n    }\n    return 0;\n}</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <script type=\"text/data\" class=\"__se_module_data\" data-module='{\"type\":\"v2_code\", \"id\" : \"SE-5e4a348e-6088-4b60-86d8-78a0a5728800\"}'></script>\n                </div>                <div class=\"se-component se-text se-l-default\" id=\"SE-56afa896-f6c6-494b-acd5-a7df536456db\">\n                    <div class=\"se-component-content\">\n                        <div class=\"se-section se-section-text se-l-default\">\n                            <div class=\"se-module se-module-text\">\n\n                                    <!-- SE-TEXT { --><p class=\"se-text-paragraph se-text-paragraph-align- \" style=\"\" id=\"SE-05b9a4cc-f4f0-46bf-964e-3137dc0d47f9\"><span style=\"\" class=\"se-fs- se-ff-   \" id=\"SE-887c2a41-9d1c-4660-be2d-c2cebec282fe\">이럴때 쓰는것이 malloc입니다.</span></p><!-- } SE-TEXT --><!-- SE-TEXT { --><p class=\"se-text-paragraph se-text-paragraph-align- \" style=\"line-height:1.4615384615384615;\" id=\"SE-3894c1a1-8ed6-4abe-ae8a-680e1da116dc\"><span style=\"color:#569cd6;background-color:#1e1e1e;\" class=\"se-fs-fs13 se-ff- se-weight-unset  \" id=\"SE-78f2acae-8704-42ff-ba3d-55393df007f3\">void</span><span style=\"color:#d4d4d4;background-color:#1e1e1e;\" class=\"se-fs-fs13 se-ff- se-weight-unset  \" id=\"SE-9c06949f-53d2-4f03-8df3-1c5320c9f50c\">* </span><span style=\"color:#dcdcaa;background-color:#1e1e1e;\" class=\"se-fs-fs13 se-ff- se-weight-unset  \" id=\"SE-296ab6c3-52e6-47f2-8f40-60a778872343\">malloc</span><span style=\"color:#d4d4d4;background-color:#1e1e1e;\" class=\"se-fs-fs13 se-ff- se-weight-unset  \" id=\"SE-12769fcd-7631-412a-90b8-591d5551c482\">(</span><span style=\"color:#4ec9b0;background-color:#1e1e1e;\" class=\"se-fs-fs13 se-ff- se-weight-unset  \" id=\"SE-287a29b8-f3c1-46f8-815b-a7fc95f33cf7\">size_t</span><span style=\"color:#d4d4d4;background-color:#1e1e1e;\" class=\"se-fs-fs13 se-ff- se-weight-unset  \" id=\"SE-4f5f4410-0de4-426b-8684-cee59230f399\"> </span><span style=\"color:#9cdcfe;background-color:#1e1e1e;\" class=\"se-fs-fs13 se-ff- se-weight-unset  \" id=\"SE-f5b32310-a0fe-4c74-99a0-e48b8a153ec0\">size</span><span style=\"color:#d4d4d4;background-color:#1e1e1e;\" class=\"se-fs-fs13 se-ff- se-weight-unset  \" id=\"SE-2db5fbd4-acde-4c9e-a3e8-70b6671649a9\">);</span></p><!-- } SE-TEXT --><!-- SE-TEXT { --><p class=\"se-text-paragraph se-text-paragraph-align- \" style=\"\" id=\"SE-44e5e7bc-e298-485e-b227-0dc1a5228bc9\"><span style=\"\" class=\"se-fs- se-ff-   \" id=\"SE-38a89b36-6f56-494d-a4d4-8660455ab483\">이렇게 생겼습니다. stdlib.h에 정의되어있습니다.</span></p><!-- } SE-TEXT --><!-- SE-TEXT { --><p class=\"se-text-paragraph se-text-paragraph-align- \" style=\"\" id=\"SE-5f1230f4-4588-4a77-a5ef-bba866ea86d2\"><span style=\"\" class=\"se-fs- se-ff-   \" id=\"SE-5561dfdd-b609-4b22-924a-beb00ef9b316\">size는 동적으로 할당할 </span><span style=\"\" class=\"se-fs- se-ff-   \" id=\"SE-08e393e0-a573-41ee-aa13-0235d934bfd7\"><b>메모리의 크기</b></span><span style=\"\" class=\"se-fs- se-ff-   \" id=\"SE-2c134dfd-6af1-43e5-86a1-39a4ccfcb42c\">입니다. 왜 메모리의 크기에 Bold를 해놨냐고요? 배열의 크기가 아닌 메모리의 크기, 즉 위 코드에서 n * int자료형의 크기, </span><span style=\"color:#9cdcfe;background-color:#1e1e1e;\" class=\"se-fs-fs13 se-ff- se-weight-unset  \" id=\"SE-d10829d6-41f2-489a-abcd-d7f1bc112857\">n</span><span style=\"color:#d4d4d4;background-color:#1e1e1e;\" class=\"se-fs-fs13 se-ff- se-weight-unset  \" id=\"SE-2b4ef0e5-9b9d-48cb-94a9-34b490af22ab\"> * </span><span style=\"color:#569cd6;background-color:#1e1e1e;\" class=\"se-fs-fs13 se-ff- se-weight-unset  \" id=\"SE-e41586bd-ab20-4ad9-816b-74b0204680a9\">sizeof</span><span style=\"color:#d4d4d4;background-color:#1e1e1e;\" class=\"se-fs-fs13 se-ff- se-weight-unset  \" id=\"SE-6996521e-fcab-42a4-9a52-0a331a5476aa\">(</span><span style=\"color:#569cd6;background-color:#1e1e1e;\" class=\"se-fs-fs13 se-ff- se-weight-unset  \" id=\"SE-cbc664ee-8148-4aaf-84ac-276aee41654d\">int</span><span style=\"color:#d4d4d4;background-color:#1e1e1e;\" class=\"se-fs-fs13 se-ff- se-weight-unset  \" id=\"SE-ff6c34d4-c0e6-4f85-a293-4470c45463eb\">)</span><span style=\"\" class=\"se-fs- se-ff-   \" id=\"SE-0dfb31b5-895c-411f-9cae-7134a93751f3\">을 해주어야 한다는 것입니다.</span></p><!-- } SE-TEXT --><!-- SE-TEXT { --><p class=\"se-text-paragraph se-text-paragraph-align- \" style=\"\" id=\"SE-25477ee8-82f5-4a38-a362-744bade2ca1c\"><span style=\"\" class=\"se-fs- se-ff-   \" id=\"SE-ec7c6bea-1819-47af-9587-992554bd8e35\">void 포인터는 </span><span style=\"\" class=\"se-fs- se-ff- se-weight-unset  \" id=\"SE-d3aa760a-9a0b-4f04-9758-8c2eff57179f\">명시적 형변환</span><span style=\"\" class=\"se-fs- se-ff-   \" id=\"SE-c64b924f-3414-4bc0-9015-921ec5c2409e\">을 아마도 해주어야합니다. </span><span style=\"color:#9cdcfe;background-color:#1e1e1e;\" class=\"se-fs-fs13 se-ff- se-weight-unset  \" id=\"SE-352dc698-d1d4-4927-b41e-ffbcd7cbedd3\">p</span><span style=\"color:#d4d4d4;background-color:#1e1e1e;\" class=\"se-fs-fs13 se-ff- se-weight-unset  \" id=\"SE-740f8478-9f26-4057-9458-b11df3bb646d\"> &#x3D; (</span><span style=\"color:#569cd6;background-color:#1e1e1e;\" class=\"se-fs-fs13 se-ff- se-weight-unset  \" id=\"SE-85c6af2c-da87-4494-84ab-dbbff1a3cebc\">int *</span><span style=\"color:#d4d4d4;background-color:#1e1e1e;\" class=\"se-fs-fs13 se-ff- se-weight-unset  \" id=\"SE-5f72d9b5-c448-43cc-b7d8-e350653c8946\">)</span><span style=\"color:#dcdcaa;background-color:#1e1e1e;\" class=\"se-fs-fs13 se-ff- se-weight-unset  \" id=\"SE-2184d89a-83c1-4b6d-b642-b91371d0953c\">malloc</span><span style=\"color:#d4d4d4;background-color:#1e1e1e;\" class=\"se-fs-fs13 se-ff- se-weight-unset  \" id=\"SE-89ecb999-1ffc-419b-ab50-55404aa5cf6f\">(</span><span style=\"color:#9cdcfe;background-color:#1e1e1e;\" class=\"se-fs-fs13 se-ff- se-weight-unset  \" id=\"SE-170148ab-d4c2-4f7b-b7f3-0b26898d5d22\">n</span><span style=\"color:#d4d4d4;background-color:#1e1e1e;\" class=\"se-fs-fs13 se-ff- se-weight-unset  \" id=\"SE-0b5acffc-2d10-4802-9f53-51d17e25a94c\"> * </span><span style=\"color:#569cd6;background-color:#1e1e1e;\" class=\"se-fs-fs13 se-ff- se-weight-unset  \" id=\"SE-1e8d4433-887e-4116-bab4-7d883d333030\">sizeof</span><span style=\"color:#d4d4d4;background-color:#1e1e1e;\" class=\"se-fs-fs13 se-ff- se-weight-unset  \" id=\"SE-3f63bac0-ecd4-4911-8eda-08e9449764be\">(</span><span style=\"color:#569cd6;background-color:#1e1e1e;\" class=\"se-fs-fs13 se-ff- se-weight-unset  \" id=\"SE-18d19e27-54ec-4b69-aff9-20990a0f7c66\">int</span><span style=\"color:#d4d4d4;background-color:#1e1e1e;\" class=\"se-fs-fs13 se-ff- se-weight-unset  \" id=\"SE-b4ef73b3-587a-4ed5-a5a3-8327d791532b\">));</span><span style=\"\" class=\"se-fs- se-ff-   \" id=\"SE-2b2a44d1-93c9-4043-82fa-bbda890a857b\">와 같이 사용하여야합니다. 전에 VS컴파일러에서 오류냈던걸로 기억하네요;;</span></p><!-- } SE-TEXT --><!-- SE-TEXT { --><p class=\"se-text-paragraph se-text-paragraph-align- \" style=\"\" id=\"SE-fa34a14a-7dc8-43f8-b38e-f991b819b32e\"><span style=\"\" class=\"se-fs- se-ff-   \" id=\"SE-c326a1e5-c950-4957-a4e6-2f11da397703\">정말 중요한 것은 </span><span style=\"\" class=\"se-fs- se-ff-   \" id=\"SE-f224d276-f732-4804-805b-6741bfe05859\"><b>앞으로 쓸 일이 없으면 free를 하셔야 합니다</b></span><span style=\"\" class=\"se-fs- se-ff-   \" id=\"SE-ae150a09-f2c2-41d4-b3da-7956ef9ddf8c\">. malloc로 할당된 메모리는 냅두면 프로세스가 끝날때까지 할당이 유지됩니다. 그 무엇도 그 메모리 주소를 가르키지 않아도 말이에요. </span><span style=\"color:#dcdcaa;background-color:#1e1e1e;\" class=\"se-fs-fs13 se-ff- se-weight-unset  \" id=\"SE-54e431e6-2762-4e0f-a68c-4966fb1d838b\">free</span><span style=\"color:#d4d4d4;background-color:#1e1e1e;\" class=\"se-fs-fs13 se-ff- se-weight-unset  \" id=\"SE-ef0947f5-e6f5-43e2-87c6-7ee8bd3fe6ae\">(</span><span style=\"color:#9cdcfe;background-color:#1e1e1e;\" class=\"se-fs-fs13 se-ff- se-weight-unset  \" id=\"SE-3810ff1f-4377-40c9-9ac9-5cf2e32df7d2\">p</span><span style=\"color:#d4d4d4;background-color:#1e1e1e;\" class=\"se-fs-fs13 se-ff- se-weight-unset  \" id=\"SE-41af8c9f-28ba-4fdb-a889-6ad6de6cc82f\">);</span><span style=\"\" class=\"se-fs- se-ff-   \" id=\"SE-8a88940f-5066-43fc-bc84-2bdcec05fa49\">와 같이 하시면 됩니다. 사실은 어차피 프로세스가 끝나면 해제될 메모리이긴 하지만 저는 습관적으로 free를 합니다. </span><span style=\"\" class=\"se-fs-fs11 se-ff-   \" id=\"SE-a9abbf25-8cab-4174-b638-0f02634d1cc5\"><strike>안한다면... 오랜시간 돌아가거나 많은 메모리를 써야하는 프로그램의 경우 메모리 누수의 지옥이 시작되기 때문입니다.</strike></span></p><!-- } SE-TEXT --><!-- SE-TEXT { --><p class=\"se-text-paragraph se-text-paragraph-align- \" style=\"\" id=\"SE-0551ea0e-db79-46c1-9064-1d56da4a1142\"><span style=\"\" class=\"se-fs- se-ff-   \" id=\"SE-afff1b8a-87ae-442f-b84f-307e2d095f30\">malloc를 이용하여 짜 보았습니다.</span></p><!-- } SE-TEXT -->\n                            </div>\n                        </div>\n                    </div>\n                </div>                <div class=\"se-component se-code se-l-code_black\" id=\"SE-bb131d08-aa73-4298-8529-11c32e201db6\">\n                    <div class=\"se-component-content\">\n                        <div class=\"se-section se-section-code se-l-code_black\">\n                            <div class=\"se-module se-module-code se-fs-fs13\">\n                                <div class=\"se-code-source\">\n                                    <div class=\"__se_code_view language-javascript\">#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\nint n, *p;\nint main(){\n    scanf(&quot;%d&quot;, &amp;n);\n    p &#x3D; (int *)malloc(n * sizeof(int));\n    for (int i &#x3D; 0; i &lt; n; i++) {\n        scanf(&quot;%d&quot;, p + i);\n    }\n    free(p);\n    return 0;\n}</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <script type=\"text/data\" class=\"__se_module_data\" data-module='{\"type\":\"v2_code\", \"id\" : \"SE-bb131d08-aa73-4298-8529-11c32e201db6\"}'></script>\n                </div>                <div class=\"se-component se-image se-l-default\" id=\"SE-6e1de8f5-a302-430c-b1ae-68fc41589dda\">\n                    <div class=\"se-component-content se-component-content-normal\">\n                        <div class=\"se-section se-section-image se-l-default se-section-align-\" style=\"max-width:238px;\">\n\n                                <div class=\"se-module se-module-image\" style=\"\">\n                                    <a href=\"#\" class=\"se-module-image-link __se_image_link __se_link\" style=\"\" onclick=\"return false;\" data-linktype=\"img\" data-linkdata='{\"id\" : \"SE-6e1de8f5-a302-430c-b1ae-68fc41589dda\", \"src\" : \"https://cafeptthumb-phinf.pstatic.net/MjAyMDEwMjdfMTIx/MDAxNjAzODAzMTQ5MDcx.ypMcmEDs3Qw9BGoCZA0vk2UvV_EcFTbM3jDZWmgbWBEg.IQmbecIOlzzcnKlEHMHghGQZssdPeXOKcpPzIT1mBk8g.PNG/15.png\", \"linkUse\" : \"false\", \"link\" : \"\"}'>\n                                        <img src=\"https://mcafethumb-phinf.pstatic.net/MjAyMDEwMjdfMTIx/MDAxNjAzODAzMTQ5MDcx.ypMcmEDs3Qw9BGoCZA0vk2UvV_EcFTbM3jDZWmgbWBEg.IQmbecIOlzzcnKlEHMHghGQZssdPeXOKcpPzIT1mBk8g.PNG/15.png?type=w800\" alt=\"\" class=\"se-image-resource\" />\n                                    </a>\n                                </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"se-component se-text se-l-default\" id=\"SE-aae5c515-898d-43aa-aa5e-5234a2f7853f\">\n                    <div class=\"se-component-content\">\n                        <div class=\"se-section se-section-text se-l-default\">\n                            <div class=\"se-module se-module-text\">\n\n                                    <!-- SE-TEXT { --><p class=\"se-text-paragraph se-text-paragraph-align- \" style=\"\" id=\"SE-8c1fa321-fedc-441c-add0-c258287c87b5\"><span style=\"\" class=\"se-fs-fs24 se-ff-   \" id=\"SE-45a69176-355c-4dc3-8412-b5a97579e975\">참고</span></p><!-- } SE-TEXT --><!-- SE-TEXT { --><p class=\"se-text-paragraph se-text-paragraph-align- \" style=\"\" id=\"SE-0a3a5cde-8e5f-4104-9b70-476c78434043\"><span style=\"\" class=\"se-fs- se-ff-   \" id=\"SE-e2e0efe4-8aff-41cf-8989-5eb6579a9f1c\"><a href=\"https://linux.die.net/man/3/malloc\" class=\"se-link\" target=\"_blank\">https://linux.die.net/man/3/malloc</a></span></p><!-- } SE-TEXT -->\n                            </div>\n                        </div>\n                    </div>\n                </div>                <div class=\"se-component se-oglink se-l-text\" id=\"SE-1b6df9bc-510a-457f-8164-406eb26c47f8\">\n                    <div class=\"se-component-content\">\n                        <div class=\"se-section se-section-oglink se-l-text se-section-align-\">\n                            <div class=\"se-module se-module-oglink\">\n                                <a href=\"https://linux.die.net/man/3/malloc\" class=\"se-oglink-info\" target=\"_blank\">\n                                    <div class=\"se-oglink-info-container\">\n                                        <strong class=\"se-oglink-title\">malloc(3): allocate/free dynamic memory - Linux man page</strong>\n\n                                        <p class=\"se-oglink-summary\">malloc(3) - Linux man page Name malloc, free, calloc, realloc - allocate and free dynamic memory Synopsis #include &lt; stdlib.h &gt; void *malloc(size_t size ); void free(void *ptr ); void *calloc(size_t nmemb , size_t size ); void *realloc(void *ptr , size_t size ); Description The malloc () function a...</p>\n                                        <p class=\"se-oglink-url\">linux.die.net</p>\n                                    </div>\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                    <script type=\"text/data\" class=\"__se_module_data\" data-module='{\"type\":\"v2_oglink\", \"id\" :\"SE-1b6df9bc-510a-457f-8164-406eb26c47f8\", \"data\" : {\"link\" : \"https://linux.die.net/man/3/malloc\", \"isVideo\" : \"false\", \"thumbnail\" : \"\"}}'></script>\n                </div>                <div class=\"se-component se-text se-l-default\" id=\"SE-8c4ef63c-67b3-491a-b6e2-5a5568304a9a\">\n                    <div class=\"se-component-content\">\n                        <div class=\"se-section se-section-text se-l-default\">\n                            <div class=\"se-module se-module-text\">\n\n                                    <!-- SE-TEXT { --><p class=\"se-text-paragraph se-text-paragraph-align- \" style=\"\" id=\"SE-da4bd858-c303-4175-a8bd-5806f1c26ba0\"><span style=\"\" class=\"se-fs- se-ff-   \" id=\"SE-c0adf7e6-c63b-4a7c-b791-8200d07785d5\"><a href=\"https://kldp.org/node/31099\" class=\"se-link\" target=\"_blank\">https://kldp.org/node/31099</a></span></p><!-- } SE-TEXT -->\n                            </div>\n                        </div>\n                    </div>\n                </div>                <div class=\"se-component se-oglink se-l-text\" id=\"SE-441684f1-0238-45d4-b804-88a8aba2a2c1\">\n                    <div class=\"se-component-content\">\n                        <div class=\"se-section se-section-oglink se-l-text se-section-align-\">\n                            <div class=\"se-module se-module-oglink\">\n                                <a href=\"https://kldp.org/node/31099\" class=\"se-oglink-info\" target=\"_blank\">\n                                    <div class=\"se-oglink-info-container\">\n                                        <strong class=\"se-oglink-title\">함수에서 malloc 사용후 free로 메모리 해제안해줘도 되지 않나 | KLDP</strong>\n\n                                        <p class=\"se-oglink-summary\">현재 위치 홈 ›› Forums ›› 공부 ›› 프로그래밍 QnA 함수에서 malloc 사용후 free로 메모리 해제안해줘도 되지 않나 글쓴이: innu / 작성시간: 화, 2004/02/24 - 10:26오전 너무 기초적인 질문일지 싶습니다. 말그대로입니다. #include &lt;stdio.h&gt; #include &lt;string.h&gt; #include &lt;stdclib.h&gt; char *re_str(char *ptr); int main() { char *p; p&#x3D;&quot;We are the world !!!&quot;; printf(&quot;%...</p>\n                                        <p class=\"se-oglink-url\">kldp.org</p>\n                                    </div>\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                    <script type=\"text/data\" class=\"__se_module_data\" data-module='{\"type\":\"v2_oglink\", \"id\" :\"SE-441684f1-0238-45d4-b804-88a8aba2a2c1\", \"data\" : {\"link\" : \"https://kldp.org/node/31099\", \"isVideo\" : \"false\", \"thumbnail\" : \"\"}}'></script>\n                </div>                <div class=\"se-component se-text se-l-default\" id=\"SE-e19b03eb-8e34-47e1-a02f-3b6b3c68ce58\">\n                    <div class=\"se-component-content\">\n                        <div class=\"se-section se-section-text se-l-default\">\n                            <div class=\"se-module se-module-text\">\n\n                                    <!-- SE-TEXT { --><p class=\"se-text-paragraph se-text-paragraph-align- \" style=\"\" id=\"SE-af640bd4-9656-42f0-bea3-b402ceee4ff1\"><span style=\"\" class=\"se-fs- se-ff-   \" id=\"SE-562f0a77-e3c6-43e5-a7a2-df25b45b4020\"><a href=\"http://gee.cs.oswego.edu/dl/html/malloc.html\" class=\"se-link\" target=\"_blank\">http://gee.cs.oswego.edu/dl/html/malloc.html</a></span></p><!-- } SE-TEXT -->\n                            </div>\n                        </div>\n                    </div>\n                </div>                <div class=\"se-component se-oglink se-l-large_image\" id=\"SE-de532b63-7c9b-4087-962e-cc8c367d44be\">\n                    <div class=\"se-component-content\">\n                        <div class=\"se-section se-section-oglink se-l-large_image se-section-align-\">\n                            <div class=\"se-module se-module-oglink\">\n                                <a href=\"http://gee.cs.oswego.edu/dl/html/malloc.html\" class=\"se-oglink-thumbnail\" target=\"_blank\">\n                                    <img src=\"https://dthumb-phinf.pstatic.net/?src&#x3D;%22http%3A%2F%2Fgee.cs.oswego.edu%2Fdl%2Fhtml%2Fmalloc1.gif%22&amp;type&#x3D;ff500_300\" class=\"se-oglink-thumbnail-resource\" alt=\"\" />\n                                </a>\n                                <a href=\"http://gee.cs.oswego.edu/dl/html/malloc.html\" class=\"se-oglink-info\" target=\"_blank\">\n                                    <div class=\"se-oglink-info-container\">\n                                        <strong class=\"se-oglink-title\">A Memory Allocator</strong>\n\n                                        <p class=\"se-oglink-summary\">A Memory Allocator by Doug Lea [A German adaptation and translation of this article appears in unix/mail December, 1996. This article is now out of date, and doesn&#x27;t reflect details of current version of malloc.] Introduction Memory allocators form interesting case studies in the engineering...</p>\n                                        <p class=\"se-oglink-url\">gee.cs.oswego.edu</p>\n                                    </div>\n                                </a>\n                            </div>\n                        </div>\n                    </div>\n                    <script type=\"text/data\" class=\"__se_module_data\" data-module='{\"type\":\"v2_oglink\", \"id\" :\"SE-de532b63-7c9b-4087-962e-cc8c367d44be\", \"data\" : {\"link\" : \"http://gee.cs.oswego.edu/dl/html/malloc.html\", \"isVideo\" : \"false\", \"thumbnail\" : \"https://dthumb-phinf.pstatic.net/?src&#x3D;%22http%3A%2F%2Fgee.cs.oswego.edu%2Fdl%2Fhtml%2Fmalloc1.gif%22&amp;type&#x3D;ff500_300\"}}'></script>\n                </div>                <div class=\"se-component se-text se-l-default\" id=\"SE-18e54a17-0b99-49fc-9512-2f413bcbd744\">\n                    <div class=\"se-component-content\">\n                        <div class=\"se-section se-section-text se-l-default\">\n                            <div class=\"se-module se-module-text\">\n\n                                    <!-- SE-TEXT { --><p class=\"se-text-paragraph se-text-paragraph-align- \" style=\"\" id=\"SE-899c3053-26e1-449c-966e-c6708a7a100b\"><span style=\"\" class=\"se-fs- se-ff-   \" id=\"SE-01265bf5-e51b-44aa-9c02-7f6b239f8ad8\">​</span></p><!-- } SE-TEXT -->\n                            </div>\n                        </div>\n                    </div>\n                </div>    </div>\n</div>",
            "customElements": [],
            "decorator": {
                "isPlug": false,
                "isShowSuicideSaver": false
            },
            "existScrapAddContent": false,
            "gdid": "90000004_01C2B33B0000691800000000",
            "id": 26904,
            "isAutoSourcing": false,
            "isBlind": false,
            "isDeleteParent": false,
            "isEnableExternal": true,
            "isEnableScrap": true,
            "isEnableSocialPlugin": true,
            "isGroupPurchase": false,
            "isMarket": false,
            "isNewComment": false,
            "isNotice": false,
            "isOpen": true,
            "isPersonalTrade": false,
            "isReadable": true,
            "isWriteComment": true,
            "menu": {
                "badMenu": false,
                "badMenuByRestrict": false,
                "boardType": "L",
                "id": 213,
                "menuType": "B",
                "name": "| C |"
            },
            "readCount": 70,
            "refArticleId": 26904,
            "replyListOrder": "",
            "scrapCount": 0,
            "subject": "메모리 동적 할당 - malloc",
            "template": {
                "isUse": false
            },
            "writeDate": 1603803851060,
            "writer": {
                "id": "hui1601",
                "image": {
                    "isAnimated": false,
                    "service": "CAFE",
                    "type": "c77_77",
                    "url": "https://cafethumb.pstatic.net/MjAyMDA5MTVfMjIx/MDAxNjAwMTcxNTQ3MDY5.o-mXvpIpmhokcsL1qOSqYR04yMlVPjlMYcpFPulXMEgg.veH2AetQAl2B06ANU6h9fptPDzJYstGXowp4_AzOus0g.JPEG/60155475_p0_master1200.jpg"
                },
                "memberLevelIconUrl": "https://cafe.pstatic.net/levelicon/1/13_130.gif",
                "memberLevelName": "챗봇 고수",
                "nick": "Hibot"
            }
        },
        "articleId": 26904,
        "attaches": [],
        "authority": {
            "isDoLike": true,
            "isEnableAttachFileDownload": true,
            "isHeadModifiable": false,
            "isModify": true,
            "isMove": false,
            "isRemove": true,
            "isReport": false,
            "isRightClick": true,
            "isSharable": true,
            "isShowLike": true,
            "isShowReply": false,
            "isShowStatistics": false,
            "isStore": false,
            "isWrite": true,
            "isWriteComment": true,
            "isWriteReply": true
        },
        "cafe": {
            "exposeReservation": false,
            "hasPopularArticle": true,
            "id": 29537083,
            "image": {
                "service": "CAFE",
                "type": "f100_100",
                "url": "https://mcafethumb-phinf.pstatic.net/MjAxOTAyMjVfMTg5/MDAxNTUxMDg2MDc1OTY2.umN5Kq9Z2sFRSdAXyJ2sz9UAlE0ofXm-dWJIRbeRbvsg.i_KxnwZ-FvDMQLnpo0ZYMo0Zl9JjOAPGWozW-WnLXJQg.PNG.wltjdqls5304/image.png"
            },
            "introduction": "자바스크립트를 사용하는 카카오톡 봇 관련 커뮤니티 입니다.",
            "isDormant": false,
            "memberCount": 5249,
            "name": "카카오톡 봇 커뮤니티",
            "openType": "O",
            "pcCafeName": "카카오톡 봇 커뮤니티",
            "url": "nameyee",
            "usingMemberLevel": true
        },
        "cafeId": 29537083,
        "comments": {
            "alarm": {
                "isChecked": false,
                "isShow": true
            },
            "disableWriteReason": "",
            "items": [
                {
                    "content": "제가 찾지는 않던 정보였어요!",
                    "id": 107244382,
                    "isArticleWriter": false,
                    "isDeleted": false,
                    "isNew": false,
                    "isRef": false,
                    "isRemovable": false,
                    "refId": 107244382,
                    "updateDate": 1603803924000,
                    "writer": {
                        "id": "app6460",
                        "image": {
                            "isAnimated": false,
                            "service": "BLOG",
                            "type": "c77_77",
                            "url": "https://blogpfthumb-phinf.pstatic.net/20200429_60/app6460_15880928481294n5kD_PNG/image.png"
                        },
                        "nick": "녹는 앱"
                    }
                },
                {
                    "content": "http://gee.cs.oswego.edu/dl/html/malloc.html 은 제가 이해 못한 관계로 크게 참고는 안했습니다.ㅌㅌ",
                    "id": 107244638,
                    "isArticleWriter": true,
                    "isDeleted": false,
                    "isNew": false,
                    "isRef": false,
                    "isRemovable": true,
                    "refId": 107244638,
                    "updateDate": 1603804010000,
                    "writer": {
                        "id": "hui1601",
                        "image": {
                            "isAnimated": false,
                            "service": "CAFE",
                            "type": "c77_77",
                            "url": "https://cafethumb.pstatic.net/MjAyMDA5MTVfMjIx/MDAxNjAwMTcxNTQ3MDY5.o-mXvpIpmhokcsL1qOSqYR04yMlVPjlMYcpFPulXMEgg.veH2AetQAl2B06ANU6h9fptPDzJYstGXowp4_AzOus0g.JPEG/60155475_p0_master1200.jpg"
                        },
                        "nick": "Hibot"
                    }
                },
                {
                    "content": "저 코드는 포인터 p의 메모리를 동적으로 할당 받은 뒤\r\n포인터의 주소값을 1씩 키워서 입력을 받는 코드가 되겠군요 와우",
                    "id": 107245275,
                    "isArticleWriter": false,
                    "isDeleted": false,
                    "isNew": false,
                    "isRef": false,
                    "isRemovable": false,
                    "refId": 107245275,
                    "updateDate": 1603804309000,
                    "writer": {
                        "id": "kenis7",
                        "image": {
                            "isAnimated": false,
                            "service": "BLOG",
                            "type": "c77_77",
                            "url": "https://blogpfthumb-phinf.pstatic.net/20200309_221/kenis7_1583741688026EvIWn_JPEG/image.jpg"
                        },
                        "nick": "Steve28"
                    }
                },
                {
                    "content": "포인터에 대한 정수 덧셈 연산은 (더하는 수) * (자료형의 크기)만큼 더해집니다.\r\n게시글에 있는 코드에서는 int*이므로 sizeof(int)씩 증가하겠죠.",
                    "id": 107250111,
                    "isArticleWriter": false,
                    "isDeleted": false,
                    "isNew": false,
                    "isRef": true,
                    "isRemovable": false,
                    "refId": 107245275,
                    "updateDate": 1603807095000,
                    "writer": {
                        "id": "matt9316",
                        "image": {
                            "service": "CAFE",
                            "type": "c77_77",
                            "url": "https://ssl.pstatic.net/static/cafe/cafe_pc/default/cafe_profile_77.png"
                        },
                        "nick": "JusticeHui"
                    }
                },
                {
                    "content": "main 안에서 arr을 선언했을때 효율은 어떤가요?\r\nint arr[n];",
                    "id": 107512022,
                    "isArticleWriter": false,
                    "isDeleted": false,
                    "isNew": false,
                    "isRef": false,
                    "isRemovable": false,
                    "refId": 107512022,
                    "updateDate": 1604051907000,
                    "writer": {
                        "id": "a2611577",
                        "image": {
                            "service": "CAFE",
                            "type": "c77_77",
                            "url": "https://ssl.pstatic.net/static/cafe/cafe_pc/default/cafe_profile_77.png"
                        },
                        "nick": "scap"
                    }
                },
                {
                    "content": "나쁘지는 않은 방법입니다만 C99또는 g++ 만 된다는 관계로 저는 쓰지 않아요 :(\r\nhttps://stackoverflow.com/questions/5368531/why-cant-i-create-an-array-of-size-n/5368571",
                    "id": 107512458,
                    "isArticleWriter": true,
                    "isDeleted": false,
                    "isNew": false,
                    "isRef": true,
                    "isRemovable": true,
                    "refId": 107512022,
                    "updateDate": 1604052363000,
                    "writer": {
                        "id": "hui1601",
                        "image": {
                            "isAnimated": false,
                            "service": "CAFE",
                            "type": "c77_77",
                            "url": "https://cafethumb.pstatic.net/MjAyMDA5MTVfMjIx/MDAxNjAwMTcxNTQ3MDY5.o-mXvpIpmhokcsL1qOSqYR04yMlVPjlMYcpFPulXMEgg.veH2AetQAl2B06ANU6h9fptPDzJYstGXowp4_AzOus0g.JPEG/60155475_p0_master1200.jpg"
                        },
                        "nick": "Hibot"
                    }
                }
            ]
        },
        "editorVersion": "SE_ONE",
        "errorCode": null,
        "heads": [],
        "isReadOnlyMode": false,
        "isW800": true,
        "readOnlyModeInfo": {
            "emergency": false,
            "linkToNoticeURL": "https://section.cafe.naver.com/cafe-home/cafe-notice?noticeId=1650",
            "readOnlyNoticeDuration": "",
            "timeToNotice": false,
            "timeToPreNotice": false
        },
        "tags": [
            "나는밥오다"
        ]
    }
}