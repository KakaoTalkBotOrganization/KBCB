{
    "result": {
        "article": {
            "commentCount": 2,
            "contentElements": [],
            "contentHtml": "<div class=\"NHN_Writeform_Main\"><b></b><div class=\"NHN_Writeform_Main\"><b><b>강좌할 주제</b></b></div><div><b>=&gt; <font color=\"#7d7d7d\">유효범위를 알아보자</font></b></div><div><font color=\"#7d7d7d\"><br /></font></div><div><b>강좌 내용</b></div><div><b>=&gt; 주의 : 이 강좌는 초심자에게는 권하지 않습니다.</b></div><div><b><br /></b></div><div><b>오늘은 자바스크립트 함수의 중요한 부분인 유효범위를 알아볼것이다.</b></div><div><b>하지만 그 전에 저번 강좌에서 빠트린 함수 용어 정리부터 하겠다.</b></div><div><b><br /></b></div><div><b>function plus(a, b) {return a+b;}</b></div><div><b>plus(1, 2);</b></div><div><b><br /></b></div><div><b>plus(a, b) 안에있는 a와 b는 매개변수라 하고</b></div><div><b>plus(1, 2) 안에있는 1과 2는 인자라고 합니다.</b></div><div><b>plus가 함수이름이고 return a+b; 에서 a+b가 리턴값이라는 정도는 알고 있으시죠? ㅎㅎ</b></div><div><b>용어정리는 끝이고 이제부터 유효범위에 대해 설명하겠다.</b></div><div><br /></div><div><b>유효범위는 변수가 어디까지 유효한가를 말한다.</b></div><div><b><br /></b></div><div><b>쉽게 설명하자면 우리가 생성한 변수가</b></div><div><b>어디까지 사용가능하고 어디서 사라지는지를 말하는거라 보면 된다.</b></div><div><b>한번 예제를 들어보겠다.(저번 예제가 좀 어려운것 같아 이번에는 좀 쉬운 예제로..)</b></div><div><b><br /></b></div><div><b>두개의 수를 더하고 2를 곱하는 함수가 있다고 하자.(쓸데는 없지만)</b></div><div><br /></div><div><b>function plus(a, b) {</b></div><div><b>var c = (a+b)*2;</b></div><div><b>return c;</b></div><div><b>}&nbsp; //이건 굳이 설명은 안하도록 하겠다.</b></div><div><b><br /></b></div><div><b>이 함수에서 만든 변수는 이 함수 안에서만 사용가능하고</b></div><div><b>함수 밖에서는 사용할수 없다.</b></div><div><b>왜냐하면 return을 실행시켜서 함수 밖으로 나가는순간&nbsp;</b></div><div><b>함수에서 만든 변수는 사라지기 때문이다.</b></div><div><b><br /></b></div><div><b>함수 안에서만 쓸수있는 변수를 지역변수라 하고</b></div><div><b>모든곳에서 쓸수있는 변수를 전역변수라고 한다.</b></div><div><b><br /></b></div><div><div style=\"font-size: 13.3333px;\"><b>function plus(a, b) {</b></div><div style=\"font-size: 13.3333px;\"><b>var c = (a+b)*2; //c는 함수안에서만 쓸수 있으므로 지역변수이다.</b></div><div style=\"font-size: 13.3333px;\"><b>return c;</b></div><div style=\"font-size: 13.3333px;\"><b>}</b></div></div><div style=\"font-size: 13.3333px;\"><b>plus(1, 2)</b></div><div style=\"font-size: 13.3333px;\"><b>replier.reply(c); //&nbsp;</b><b>이렇게 해도 3이 나오지 않는다.</b></div><div style=\"font-size: 13.3333px;\"><b><br /></b></div><div><b>여기서 퀴즈</b></div><div><b>위에 있는 함수에는 몇개의 변수가 있을까요?</b></div><div><b><br /></b></div><div><b><br /></b></div><div><b><br /></b></div><div><b><br /></b></div><div><b><br /></b></div><div><b><br /></b></div><div><b><br /></b></div><div><b>정답은 3개 입니다. a,b,c 이렇게 3개이다.</b></div><div><b>c를 안쓰고&nbsp; a = a(a+b)*2; 이렇게 하고 a를 돌려줘도 제대로 작동한다.</b></div><div><b>그렇다는건 a도 변수라는 소리이다.</b></div><div><b>그러니 매개변수도 함수 밖에서는 없는 변수다.</b></div><div><br /></div><div><b>오케이! 이제 유효범위가 뭔지 알겠는데...</b></div><div><b>이걸 어따씀?? 이게 있어봤자 좋은게 없는것 같은데</b></div><div><br /></div><div><b>라는 생각이 들수 있다. 하지만 이건 꽤 유용하게 쓸수있다.</b></div><div><b>한번 예시를 다시 들어보곘다.</b></div><div><b><br /></b></div><div><div style=\"font-size: 13.3333px;\"><b>function plus(a, b) {</b></div><div style=\"font-size: 13.3333px;\"><b>var c = (a+b)*2; //밑에 같은 이름의 변수가 있던 말던 상관없다.</b></div><div style=\"font-size: 13.3333px;\"><b>return c;</b></div><div style=\"font-size: 13.3333px;\"><b>}</b></div></div><div style=\"font-size: 13.3333px;\"><b>if(msg == &quot;랜덤&quot;) {</b></div><div style=\"font-size: 13.3333px;\"><b>var c = Math.floor(Math.random()*100);</b></div><div style=\"font-size: 13.3333px;\"><b>replier.reply(c);</b></div><div style=\"font-size: 13.3333px;\"><b>}</b></div><div style=\"font-size: 13.3333px;\"><b>if(msg ......</b></div><div style=\"font-size: 13.3333px;\"><b>...... //나머지 코드들..</b></div><div style=\"font-size: 13.3333px;\"><b><br /></b></div><div style=\"font-size: 13.3333px;\"><b>이것만 봐서는 잘 모를수도 있다.</b></div><div style=\"font-size: 13.3333px;\"><b>여기서 말하고 싶은것은 함수를 만들때 내가 무슨변수를 썼는지를 몰라도 된다는것이다!</b></div><div style=\"font-size: 13.3333px;\"><b>코드가 커지면 커질수록 변수도 엄청 많아지기 때문에</b></div><div style=\"font-size: 13.3333px;\"><b>변수이름 짓기가 점점 힘들어지고 변수이름이 겹칠수 있어서 에러가 발생할수 있다.</b></div><div style=\"font-size: 13.3333px;\"><b><br /></b></div><div style=\"font-size: 13.3333px;\"><b>하지만 함수 안에서는 변수이름 돌려막기가 가능하다!</b></div><div style=\"font-size: 13.3333px;\"><b>(이게 진짜 개꿀임&nbsp; 변수이름짓기가 ㄹㅇ힘든데 스킵가능)</b></div><div style=\"font-size: 13.3333px;\"><b><br /></b></div><div style=\"font-size: 13.3333px;\"><b>마지막으로 유효범위의 성질 하나를 설명하고 끝마치겠다.</b></div><div style=\"font-size: 13.3333px;\"><b>유효범위가 작은 변수가 유효범위가 큰 변수보다 우선순위에 있다.</b></div><div style=\"font-size: 13.3333px;\"><b>이건 예제를 보면 쉽게 이해가 가능하다.</b></div><div style=\"font-size: 13.3333px;\"><br /></div><div style=\"font-size: 13.3333px;\"><b>function b() {</b></div><div style=\"font-size: 13.3333px;\"><b>var a = 1; //여기 있는 a는 지역변수이다.</b></div><div style=\"font-size: 13.3333px;\"><b>return a;</b></div><div style=\"font-size: 13.3333px;\"><b>}</b></div><div style=\"font-size: 13.3333px;\"><b>var a = 0; //여기 있는 a는 모든곳에서 사용할수 있는 변수이기 때문에 전역변수이다.</b></div><div style=\"font-size: 13.3333px;\"><b>replier.reply(b());</b></div><div style=\"font-size: 13.3333px;\"><b><br /></b></div><div style=\"font-size: 13.3333px;\"><b>함수 안에서 만든 변수가 유효범위가 더 작기 때문에&nbsp;</b></div><div style=\"font-size: 13.3333px;\"><b>저 함수는 0이 아닌 1을 리턴하게 됩니다.</b></div><div style=\"font-size: 13.3333px;\"><b><br /></b></div><div style=\"font-size: 13.3333px;\"><div style=\"font-size: 13.3333px;\"><b>하지만 var a = 1 이 없다면 전역변수 a를 리턴합니다.</b></div><div style=\"font-size: 13.3333px;\"><b>그러므로 0을 리턴하게 됩니다.</b></div><div><b><br /></b></div><div><b>그러면 유효범위가 더 큰 변수를 사용하고 싶을때는 어떻게 하면 될까요?</b></div><div><b>그냥 this.를 변수에 붙여주면 전역변수를 사용할수 있습니다.</b></div><div><b>(나중에 this에 대해서 자세히 설명하겠다.)</b></div><div><br /></div></div><div style=\"font-size: 13.3333px;\"><div style=\"font-size: 13.3333px;\"><b>function b() {</b></div><div style=\"font-size: 13.3333px;\"><b>var a = 1;</b></div><div style=\"font-size: 13.3333px;\"><b>return this.a; //this.a는 전역변수 a를 가리킨다.</b></div><div style=\"font-size: 13.3333px;\"><b>}</b></div><div style=\"font-size: 13.3333px;\"><b>var a = 0; //전역변수</b></div><div style=\"font-size: 13.3333px;\"><b>replier.reply(b()); //0을 리턴함</b></div><div style=\"font-size: 13.3333px;\"><b>이렇게 하면 전역변수를 사용할수 있다.</b></div></div><div style=\"font-size: 13.3333px;\"><br /></div><div style=\"font-size: 13.3333px;\"><b>참고로 자바스크립트에서는 for문 if문 등등에서는 변수가 사라지지 않는다.</b></div><div style=\"font-size: 13.3333px;\"><br /></div><div style=\"font-size: 13.3333px;\"><b>if(msg) {var b = 0;}</b></div><div style=\"font-size: 13.3333px;\"><b>replier.reply(b); //이게 가능하다!</b></div><div style=\"font-size: 13.3333px;\"><b>(다른 언어와는 좀 다르므로 주의!)</b></div><div style=\"font-size: 13.3333px;\"><br /></div><div style=\"font-size: 13.3333px;\"><b>//수정</b></div><div style=\"font-size: 13.3333px;\"><b>let으로 변수를 선언하면 for문 if문 등등에서도 변수가 사라진다.</b></div><div style=\"font-size: 13.3333px;\"><div style=\"font-size: 13.3333px;\"><b>if(msg) {var b = 0;}</b></div><div style=\"font-size: 13.3333px;\"><b>replier.reply(b); //undefined가 나온다</b></div></div><div style=\"font-size: 13.3333px;\"><b><br /></b></div><div style=\"font-size: 13.3333px;\"><b>이렇게 유효범위가 무엇인지 또 이걸 어떻게 유용하게 쓸수있는지를 알아봤다.</b></div><div style=\"font-size: 13.3333px;\"><b>다음 강좌에서는 자바스크립트의 함수의 매우 중요한 특징을 설명하겠다.</b></div><div style=\"font-size: 13.3333px;\"><b><br /></b></div><div style=\"font-size: 13.3333px;\"><b>//질문은 댓글로 받습니다.</b></div><div style=\"font-size: 13.3333px;\"><b>긴글 읽어주셔서 감사합니다!</b></div><div style=\"font-size: 13.3333px;\"><br /></div><div style=\"font-size: 13.3333px;\"><b><br /></b></div></div>",
            "decorator": {
                "isPlug": false,
                "isShowSuicideSaver": false
            },
            "existScrapAddContent": false,
            "gdid": "90000004_01C2B33B00004F2C00000000",
            "head": "중급",
            "headId": 20,
            "id": 20268,
            "isAutoSourcing": false,
            "isBlind": false,
            "isDeleteParent": false,
            "isEnableExternal": true,
            "isEnableScrap": true,
            "isEnableSocialPlugin": true,
            "isGroupPurchase": false,
            "isMarket": false,
            "isNewComment": false,
            "isNotice": false,
            "isOpen": true,
            "isPersonalTrade": false,
            "isReadable": true,
            "isWriteComment": true,
            "menu": {
                "badMenu": false,
                "badMenuByRestrict": false,
                "boardType": "L",
                "id": 20,
                "menuType": "B",
                "name": "| 카카오톡 봇 강좌 |"
            },
            "readCount": 84,
            "refArticleId": 20268,
            "replyListOrder": "",
            "scrapCount": 0,
            "subject": "함수지향과 객체지향(2) - 유효범위를 알아보자",
            "template": {
                "isUse": false
            },
            "writeDate": 1593046440460,
            "writer": {
                "id": "choi0108-",
                "image": {
                    "service": "CAFE",
                    "type": "c77_77",
                    "url": "https://ssl.pstatic.net/static/cafe/cafe_pc/default/cafe_profile_77.png"
                },
                "memberLevelIconUrl": "https://cafe.pstatic.net/levelicon/1/13_140.gif",
                "memberLevelName": "챗봇 마스터",
                "nick": "choi0108"
            }
        },
        "articleId": 20268,
        "attaches": [],
        "authority": {
            "isDoLike": true,
            "isEnableAttachFileDownload": true,
            "isHeadModifiable": false,
            "isModify": false,
            "isMove": false,
            "isRemove": false,
            "isReport": true,
            "isRightClick": true,
            "isSharable": true,
            "isShowLike": true,
            "isShowReply": false,
            "isShowStatistics": false,
            "isStore": false,
            "isWrite": true,
            "isWriteComment": true,
            "isWriteReply": true
        },
        "cafe": {
            "exposeReservation": false,
            "hasPopularArticle": true,
            "id": 29537083,
            "image": {
                "service": "CAFE",
                "type": "f100_100",
                "url": "https://mcafethumb-phinf.pstatic.net/MjAxOTAyMjVfMTg5/MDAxNTUxMDg2MDc1OTY2.umN5Kq9Z2sFRSdAXyJ2sz9UAlE0ofXm-dWJIRbeRbvsg.i_KxnwZ-FvDMQLnpo0ZYMo0Zl9JjOAPGWozW-WnLXJQg.PNG.wltjdqls5304/image.png"
            },
            "introduction": "자바스크립트를 사용하는 카카오톡 봇 관련 커뮤니티 입니다.",
            "isDormant": false,
            "memberCount": 5248,
            "name": "카카오톡 봇 커뮤니티",
            "openType": "O",
            "pcCafeName": "카카오톡 봇 커뮤니티",
            "url": "nameyee",
            "usingMemberLevel": true
        },
        "cafeId": 29537083,
        "comments": {
            "alarm": {
                "isChecked": false,
                "isShow": true
            },
            "disableWriteReason": "",
            "items": [
                {
                    "content": "",
                    "id": 94749333,
                    "isArticleWriter": false,
                    "isDeleted": true,
                    "isNew": false,
                    "isRef": false,
                    "isRemovable": false,
                    "refId": 94749333,
                    "updateDate": 1593049259000,
                    "writer": {
                        "id": "",
                        "image": {
                            "service": "CAFE",
                            "type": "c77_77",
                            "url": "https://ssl.pstatic.net/static/cafe/cafe_pc/default/cafe_profile_77.png"
                        },
                        "nick": ""
                    }
                },
                {
                    "content": "그건 모르고 있었네요\n댓글 감사합니다 ㅎ",
                    "id": 94749574,
                    "isArticleWriter": true,
                    "isDeleted": false,
                    "isNew": false,
                    "isRef": true,
                    "isRemovable": false,
                    "refId": 94749333,
                    "updateDate": 1593049354000,
                    "writer": {
                        "id": "choi0108-",
                        "image": {
                            "service": "CAFE",
                            "type": "c77_77",
                            "url": "https://ssl.pstatic.net/static/cafe/cafe_pc/default/cafe_profile_77.png"
                        },
                        "nick": "choi0108"
                    }
                },
                {
                    "content": "",
                    "id": 94749432,
                    "isArticleWriter": false,
                    "isDeleted": true,
                    "isNew": false,
                    "isRef": false,
                    "isRemovable": false,
                    "refId": 94749432,
                    "updateDate": 1593049297000,
                    "writer": {
                        "id": "",
                        "image": {
                            "service": "CAFE",
                            "type": "c77_77",
                            "url": "https://ssl.pstatic.net/static/cafe/cafe_pc/default/cafe_profile_77.png"
                        },
                        "nick": ""
                    }
                },
                {
                    "content": "둘다 혼용해서 쓸수 있지만\n이 강좌에서는 좀더 의미를 분명하게 하고자\n두개를 구분했습니다.",
                    "id": 94749780,
                    "isArticleWriter": true,
                    "isDeleted": false,
                    "isNew": false,
                    "isRef": true,
                    "isRemovable": false,
                    "refId": 94749432,
                    "updateDate": 1593049461000,
                    "writer": {
                        "id": "choi0108-",
                        "image": {
                            "service": "CAFE",
                            "type": "c77_77",
                            "url": "https://ssl.pstatic.net/static/cafe/cafe_pc/default/cafe_profile_77.png"
                        },
                        "nick": "choi0108"
                    }
                }
            ]
        },
        "editorVersion": "LEGACY",
        "errorCode": null,
        "heads": [
            {
                "head": "초급",
                "headId": 5
            },
            {
                "head": "응용",
                "headId": 7
            },
            {
                "head": "중급",
                "headId": 20
            },
            {
                "head": "고급",
                "headId": 21
            },
            {
                "head": "기타",
                "headId": 39
            },
            {
                "head": "팁",
                "headId": 54
            }
        ],
        "isReadOnlyMode": false,
        "isW800": true,
        "readOnlyModeInfo": {
            "emergency": false,
            "linkToNoticeURL": "https://section.cafe.naver.com/cafe-home/cafe-notice?noticeId=1650",
            "readOnlyNoticeDuration": "",
            "timeToNotice": false,
            "timeToPreNotice": false
        },
        "tags": []
    }
}