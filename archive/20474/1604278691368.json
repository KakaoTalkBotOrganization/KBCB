{
    "result": {
        "article": {
            "commentCount": 0,
            "contentElements": [],
            "contentHtml": "<div class=\"NHN_Writeform_Main\"><div><b>질문할 어플 </b>(새자봇, 젤브봇, 메신저봇, 닼토봇, 기타)<div><b>=&gt;&nbsp;메신저봇</b></div></div><b></b><div><b><b><br /></b></b></div><b>질문할 소스</b><div><b>=&gt;&nbsp;function path(sender){<br />&nbsp; return &quot;sdcard/주식/&quot;+sender+&quot;txt&quot;;<br />}</b></div><div><b><br />function response(room, msg, sender, isGroupChat, replier, imageDB, packageName) {<br />&nbsp; much={&quot;a전자&quot;:10000, &quot;b전자&quot;:20000, &quot;c전자&quot;:50000, &quot;d전자&quot;:100000, &quot;e전자&quot;:1000000};<br />&nbsp; if(msg==&quot;::회원가입&quot;){<br />&nbsp;&nbsp;&nbsp; try{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var a=JSON.parse(FileStream.read(path(sender)));<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; java.lang.Thread.Sleep(600);<br />&nbsp;&nbsp;&nbsp; }catch(e){<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var playerdata={&quot;name&quot;:sender,&quot;보유주식&quot;:null};<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; player=JSON.stringify(playerdata);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FileStream.write(path(sender),player);<br />&nbsp;&nbsp;&nbsp; }<br />&nbsp; }<br />&nbsp; if(msg==&quot;::a전자&quot;){<br />&nbsp;&nbsp;&nbsp;&nbsp; replier.reply(much.a전자);<br />&nbsp;&nbsp; }<br />&nbsp;&nbsp; function diff()<br />&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp; while(true)<br />&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a=Math.floor(Math.random()*100);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b=Math.floor(Math.random()*100);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; c=a-b/100;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; much.a전자=much.a전자+(much.a전자*c);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; java.lang.Thread.sleep(60*5*1000);<br />&nbsp;&nbsp;&nbsp;&nbsp; }<br />&nbsp;&nbsp; }<br />}</b></div><div><b><br /></b></div><div><b>질문내용</b></div><div><b>=&gt;&nbsp;a전자가 10000원이면 5분마다 그 값이 랜덤으로 상승(하락)하게 하고 싶은데 </b></div><div><strong>function path(sender){<br />&nbsp; return &quot;sdcard/주식/&quot;+sender+&quot;txt&quot;;<br />}</strong></div><div><strong><br />function response(room, msg, sender, isGroupChat, replier, imageDB, packageName) {<br />&nbsp; much={&quot;a전자&quot;:10000, &quot;b전자&quot;:20000, &quot;c전자&quot;:50000, &quot;d전자&quot;:100000, &quot;e전자&quot;:1000000};<br />&nbsp; if(msg==&quot;::회원가입&quot;){<br />&nbsp;&nbsp;&nbsp; try{<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var a=JSON.parse(FileStream.read(path(sender)));<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; java.lang.Thread.Sleep(600);<br />&nbsp;&nbsp;&nbsp; }catch(e){<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; var playerdata={&quot;name&quot;:sender,&quot;보유주식&quot;:null};<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; player=JSON.stringify(playerdata);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; FileStream.write(path(sender),player);<br />&nbsp;&nbsp;&nbsp; }<br />&nbsp; }<br />&nbsp; if(msg==&quot;::a전자&quot;){<br />&nbsp;&nbsp;&nbsp;&nbsp; replier.reply(much.a전자);<br />&nbsp;&nbsp; }<br />&nbsp;&nbsp; function diff()<br />&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp; while(true)<br />&nbsp;&nbsp;&nbsp;&nbsp; {<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; a=Math.floor(Math.random()*100);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; b=Math.floor(Math.random()*100);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; c=a-b/100;<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; much.a전자=much.a전자+(much.a전자*c);<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; java.lang.Thread.sleep(60*5*1000);<br />&nbsp;&nbsp;&nbsp;&nbsp; }<br />&nbsp;&nbsp; }<br />}</strong></div><div><strong>이 식이 작동도 안하네요...</strong></div><div><strong>혹시 다른 방법 아실까요?</strong></div><div><b><br /></b></div><div><b><br /></b></div><div><b><br /></b></div><div><b><br /></b></div><div><b><br /></b></div><div><b><br /></b></div><div><span style=\"font-family: dotum; font-size: 13.33px; background-color: rgb(153, 220, 255);\">( 말머리 등록 해주세요! )</span></div></div>",
            "decorator": {
                "isPlug": false,
                "isShowSuicideSaver": false
            },
            "existScrapAddContent": false,
            "gdid": "90000004_01C2B33B00004FFA00000000",
            "id": 20474,
            "isAutoSourcing": false,
            "isBlind": false,
            "isDeleteParent": false,
            "isEnableExternal": true,
            "isEnableScrap": true,
            "isEnableSocialPlugin": true,
            "isGroupPurchase": false,
            "isMarket": false,
            "isNewComment": false,
            "isNotice": false,
            "isOpen": true,
            "isPersonalTrade": false,
            "isReadable": true,
            "isWriteComment": true,
            "menu": {
                "badMenu": false,
                "badMenuByRestrict": false,
                "boardType": "L",
                "id": 3,
                "menuType": "B",
                "name": "| 소스 질문 |"
            },
            "readCount": 140,
            "refArticleId": 20474,
            "replyListOrder": "",
            "scrapCount": 0,
            "subject": "주식 소스에 대하여 질문합니다",
            "template": {
                "isUse": false
            },
            "writeDate": 1593401419503,
            "writer": {
                "id": "2006minkyu",
                "image": {
                    "isAnimated": false,
                    "service": "BLOG",
                    "type": "c77_77",
                    "url": "https://blogpfthumb-phinf.pstatic.net/MjAxOTEwMDFfMTc5/MDAxNTY5OTMzODk3MTg3.IeTBB7-jOjTwQpopsOj7jHYnN0VrrFSbF9IippL0zasg.uTYrIiZ402rdhf1xWRiDsHV0tSNOWRbeuRquW7ilLP8g.JPEG.2006minkyu/db_080401_001_01_rothko62.jpg"
                },
                "memberLevelIconUrl": "https://cafe.pstatic.net/levelicon/1/13_120.gif",
                "memberLevelName": "챗봇 중수",
                "nick": "잉크잉크"
            }
        },
        "articleId": 20474,
        "attaches": [],
        "authority": {
            "isDoLike": true,
            "isEnableAttachFileDownload": true,
            "isHeadModifiable": false,
            "isModify": false,
            "isMove": false,
            "isRemove": false,
            "isReport": true,
            "isRightClick": true,
            "isSharable": true,
            "isShowLike": true,
            "isShowReply": false,
            "isShowStatistics": false,
            "isStore": false,
            "isWrite": true,
            "isWriteComment": true,
            "isWriteReply": true
        },
        "cafe": {
            "exposeReservation": false,
            "hasPopularArticle": true,
            "id": 29537083,
            "image": {
                "service": "CAFE",
                "type": "f100_100",
                "url": "https://mcafethumb-phinf.pstatic.net/MjAxOTAyMjVfMTg5/MDAxNTUxMDg2MDc1OTY2.umN5Kq9Z2sFRSdAXyJ2sz9UAlE0ofXm-dWJIRbeRbvsg.i_KxnwZ-FvDMQLnpo0ZYMo0Zl9JjOAPGWozW-WnLXJQg.PNG.wltjdqls5304/image.png"
            },
            "introduction": "자바스크립트를 사용하는 카카오톡 봇 관련 커뮤니티 입니다.",
            "isDormant": false,
            "memberCount": 5248,
            "name": "카카오톡 봇 커뮤니티",
            "openType": "O",
            "pcCafeName": "카카오톡 봇 커뮤니티",
            "url": "nameyee",
            "usingMemberLevel": true
        },
        "cafeId": 29537083,
        "comments": {
            "alarm": {
                "isChecked": false,
                "isShow": true
            },
            "disableWriteReason": "",
            "items": []
        },
        "editorVersion": "LEGACY",
        "errorCode": null,
        "heads": [
            {
                "head": "메신저봇",
                "headId": 57
            },
            {
                "head": "채팅자동봇",
                "headId": 58
            },
            {
                "head": "답변 완료",
                "headId": 99
            },
            {
                "head": "카링",
                "headId": 105
            }
        ],
        "isReadOnlyMode": false,
        "isW800": true,
        "readOnlyModeInfo": {
            "emergency": false,
            "linkToNoticeURL": "https://section.cafe.naver.com/cafe-home/cafe-notice?noticeId=1650",
            "readOnlyNoticeDuration": "",
            "timeToNotice": false,
            "timeToPreNotice": false
        },
        "tags": []
    }
}