{
    "result": {
        "article": {
            "commentCount": 4,
            "contentElements": [],
            "contentHtml": "<p>&nbsp;</p><div class=\"NHN_Writeform_Main\"><div><b>질문할 어플 </b>(새자봇, 젤브봇, 메신저봇, 닼토봇, 기타)<div><b>=&gt; 메신저봇</b></div></div><b></b><div><b><b><br /></b></b></div><b>질문할 소스</b><div><b>=&gt;&nbsp;</b><span style=\"font-size: 13pt;\">const Thread = java.lang.Thread;</span></div><div>const Jsoup = org.jsoup.Jsoup;</div><div>let status;</div><div>let loopStarted = false;</div><div>let stop = false;&nbsp;</div><div>let data_real = [];&nbsp;</div><div>let data_pre = [];&nbsp;</div><div>/*-- 변수 설정 --*/</div><div>let room_raw = [&quot;https://open.kakao.com/o/gtpL61fc&quot;]; //사용할 방 주소 순서대로 추가하시면 됩니다.</div><div>let room_names = [&quot;Car&amp;game hub (차덕후) (게임덕후)&quot;]; //사용할 방 이름 정확하게 순서대로 추가하시면 됩니다.</div><div>let korean=true; //한국에서 접속할경우 true로 해두시면 응답속도가 더 빨라집니다. 접속이 아에 안되거나 해외에서 접속하시는분들은 false로 설정해주세요.</div><div>for(var count2=0;count2&lt;room_raw.length;count2++){</div><div>&nbsp; &nbsp; data_real.push({result: null});</div><div>&nbsp; &nbsp; data_pre.push({result: null});</div><div>}</div><div>const source_name=&quot;입퇴장&quot;; //메봇에서의 소스 이름을 넣으셔야 합니다.</div><div>const utc=1000 // 업데이트 시간 주기입니다; 단위는 ms 입니다; 1S=1000ms; 최소 500이상 - 최대 3000을 권장합니다;</div><div>const utce=60000 //에러 발생시 다음 업데이트까지 대기시간입니다; 단위는 ms 입니다; 1S=1000ms; 최소 30000이상 - 최대 300000을 권장합니다.</div><div>/*-- 변수 설정 끝 --*/</div><div>function response(room, msg, sender, isGroupChat, replier, ImageDB, packageName, threadId) {</div><div>&nbsp; &nbsp; if (!loopStarted) {</div><div>&nbsp; &nbsp; &nbsp; loopStarted = true;</div><div>&nbsp; &nbsp; &nbsp;&nbsp;</div><div>&nbsp; &nbsp; &nbsp; while (!stop) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;if (java.lang.Thread.interrupted()==true){Api.off(source_name);return &quot;stopped&quot;;} // 메신저봇R 전용; thread interrupt</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;var success= updateData(); // 데이터 업데이트</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;if (status==403){Api.off(source_name);return &quot;stopped&quot;;};</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;if(success){</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* 이곳에다가 소스를 추가하실수 있습니다. */</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* 지원하는 변수: name, link, description, headcount, master, tags, like*/</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; /* 예시: data_pre[i].result.name 또는 data_pre[i].result.tags*/</div><div><br /></div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; for (let i = 0; i &lt; room_raw.length; i ++) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;if (data_pre[i].result != null) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (data_real[i].result.headcount &gt; data_pre[i].result.headcount)</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Api.replyRoom(room_names[i], &quot;[알림] 누군가 방을 들어왔어요!\\n 인원: &quot;+data_pre[i].result.headcount+&quot;↗&quot;+data_real[i].result.headcount);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else if (data_real[i].result.headcount &lt; data_pre[i].result.headcount)</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Api.replyRoom(room_names[i], &quot;[알림] 누군가 방을 나갔어요!\\n 인원: &quot;+data_pre[i].result.headcount+&quot;↘&quot;+data_real[i].result.headcount);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;/* for (let i = 0; i &lt; room_raw.length; i ++) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;if (data_pre[i].result != null) {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (data_real[i].result.like &gt; data_pre[i].result.like)</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Api.replyRoom(room_names[i], &quot;[알림] 누군가 좋아요를 눌렀어요!\\n 하트: &quot;+data_pre[i].result.like+&quot;↗&quot;+data_real[i].result.like);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; else if (data_real[i].result.like &lt; data_pre[i].result.like)</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Api.replyRoom(room_names[i], &quot;[알림] 누군가 좋아요를 가져갔어요!\\n 하트: &quot;+data_pre[i].result.like+&quot;↘&quot;+data_real[i].result.like);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; } *///쓰실거면 주석 풀어놓으시면 됩니다. 이것 -&gt; /* */ &lt;-</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(utc); //업데이트 주기 입니다. (ms 단위)&nbsp;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;else{</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Thread.sleep(utce); // 연결 에러시 대기시간</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}</div><div>&nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp;}</div><div>}</div><div><br /></div><div>updateData = () =&gt; {</div><div>&nbsp; let res;</div><div>&nbsp; try{</div><div>&nbsp; &nbsp; for (let i = 0; i &lt; room_raw.length; i ++) {</div><div>&nbsp; &nbsp; &nbsp;&nbsp;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; data_pre[i] = data_real[i]; // copy previous data_pre to data_real</div><div>&nbsp; &nbsp; &nbsp; &nbsp; if(korean){</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;res = Jsoup.connect(&quot;https://icn.develope.kr/search/room?room=&quot; + room_raw[i]).header(&quot;Host&quot;,&quot;api.develope.kr&quot;).ignoreContentType(true).ignoreHttpErrors(true).execute() //강제로 ICN 엣지 연결.</div><div>&nbsp; &nbsp; &nbsp; &nbsp; } else {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;res = Jsoup.connect(&quot;https://api.develope.kr/search/room?room=&quot; + room_raw[i]).ignoreContentType(true).ignoreHttpErrors(true).execute() //일반 모드.</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; status=res.statusCode();</div><div>&nbsp; &nbsp; &nbsp; &nbsp; if(status!=200){</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;let a=&quot;[오류] 서버로부터 정보를 받아오지 못했습니다.&quot;;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;if (status==503){</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; a = a + &quot;\\n현재 서버가 점검 중입니다. 자세한 정보는 <a href=\"https://api.develope.kr/\" target=\"_blank\">https://api.develope.kr/</a> 을 확인해주세요.\\n&quot;+utce/1000+&quot;초 후 연결을 다시 시도합니다.&quot;;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;else if(status==403){</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; a = a + &quot;\\n사용자의 IP가 서버로부터 차단되었습니다. 자세한 사항은 소스 밑 주석에 작성되어있는 연락처를 통해 문의해주세요.&quot;;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;else {</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; a = a + &quot;\\n인터넷 연결을 확인해보시길 바랍니다. 계속 안되는경우 소스 밑 주석에 작성되어있는 연락처를 통해 질문하실수 있습니다.\\n&quot;+utce/1000+&quot;초 후 연결을 다시 시도합니다.&quot;;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;}</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;a = a + &quot;\\nHTTP &quot;+status+&quot; ERROR&quot; ;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;Log.e(a);</div><div>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;return false;</div><div>&nbsp; &nbsp; &nbsp; &nbsp; }</div><div>&nbsp; &nbsp; &nbsp; &nbsp; let obj = JSON.parse(res.body());</div><div>&nbsp; &nbsp; &nbsp; &nbsp; data_real[i] = obj;</div><div>&nbsp; &nbsp; }</div><div>&nbsp; return true;</div><div>&nbsp; } catch(e){</div><div>&nbsp; &nbsp; &nbsp; Log.e(&quot;오류가 발생했습니다. &quot;+utce/1000+&quot;초 후 연결을 다시 시도합니다.\\n에러 내0용:&quot;+e);</div><div>&nbsp; &nbsp; &nbsp; return false;</div><div>&nbsp; }</div><div><br /></div><div>}</div><div><br /></div><div><b><br /></b></div><div><b>질문내용</b></div><div><b>=&gt; 갑자기 잘 작동 하다가 오류가 나는데 왜 그런걸까요? ㅠ</b></div><div><b><br /></b></div><div><b><br /></b></div><div><b><br /></b></div><div><b><br /></b></div><div><b><br /></b></div><div><b><br /></b></div><div><span style=\"font-family: dotum; font-size: 13.3333px; background-color: rgb(153, 220, 255);\">( 말머리 등록 해주세요! )</span></div></div>",
            "decorator": {
                "isPlug": false,
                "isShowSuicideSaver": false
            },
            "existScrapAddContent": false,
            "gdid": "90000004_01C2B33B000050EF00000000",
            "head": "메신저봇",
            "headId": 57,
            "id": 20719,
            "isAutoSourcing": false,
            "isBlind": false,
            "isDeleteParent": false,
            "isEnableExternal": true,
            "isEnableScrap": true,
            "isEnableSocialPlugin": true,
            "isGroupPurchase": false,
            "isMarket": false,
            "isNewComment": false,
            "isNotice": false,
            "isOpen": true,
            "isPersonalTrade": false,
            "isReadable": true,
            "isWriteComment": true,
            "menu": {
                "badMenu": false,
                "badMenuByRestrict": false,
                "boardType": "L",
                "id": 3,
                "menuType": "B",
                "name": "| 소스 질문 |"
            },
            "readCount": 407,
            "refArticleId": 20719,
            "replyListOrder": "",
            "scrapCount": 0,
            "subject": "입퇴장 소스 질문",
            "template": {
                "isUse": false
            },
            "writeDate": 1593875592567,
            "writer": {
                "id": "hajuhee01",
                "image": {
                    "service": "CAFE",
                    "type": "c77_77",
                    "url": "https://ssl.pstatic.net/static/cafe/cafe_pc/default/cafe_profile_77.png"
                },
                "memberLevelIconUrl": "https://cafe.pstatic.net/levelicon/1/13_130.gif",
                "memberLevelName": "챗봇 고수",
                "nick": "hajuhee01"
            }
        },
        "articleId": 20719,
        "attaches": [],
        "authority": {
            "isDoLike": true,
            "isEnableAttachFileDownload": true,
            "isHeadModifiable": false,
            "isModify": false,
            "isMove": false,
            "isRemove": false,
            "isReport": true,
            "isRightClick": true,
            "isSharable": true,
            "isShowLike": true,
            "isShowReply": false,
            "isShowStatistics": false,
            "isStore": false,
            "isWrite": true,
            "isWriteComment": true,
            "isWriteReply": true
        },
        "cafe": {
            "exposeReservation": false,
            "hasPopularArticle": true,
            "id": 29537083,
            "image": {
                "service": "CAFE",
                "type": "f100_100",
                "url": "https://mcafethumb-phinf.pstatic.net/MjAxOTAyMjVfMTg5/MDAxNTUxMDg2MDc1OTY2.umN5Kq9Z2sFRSdAXyJ2sz9UAlE0ofXm-dWJIRbeRbvsg.i_KxnwZ-FvDMQLnpo0ZYMo0Zl9JjOAPGWozW-WnLXJQg.PNG.wltjdqls5304/image.png"
            },
            "introduction": "자바스크립트를 사용하는 카카오톡 봇 관련 커뮤니티 입니다.",
            "isDormant": false,
            "memberCount": 5248,
            "name": "카카오톡 봇 커뮤니티",
            "openType": "O",
            "pcCafeName": "카카오톡 봇 커뮤니티",
            "url": "nameyee",
            "usingMemberLevel": true
        },
        "cafeId": 29537083,
        "comments": {
            "alarm": {
                "isChecked": false,
                "isShow": true
            },
            "disableWriteReason": "",
            "items": [
                {
                    "content": "뭔오류요 ㅡㅡ",
                    "id": 95740679,
                    "isArticleWriter": false,
                    "isDeleted": false,
                    "isNew": false,
                    "isRef": false,
                    "isRemovable": false,
                    "refId": 95740679,
                    "updateDate": 1593875860000,
                    "writer": {
                        "id": "jinnyday0719",
                        "image": {
                            "isAnimated": false,
                            "service": "CAFE",
                            "type": "c77_77",
                            "url": "https://cafethumb.pstatic.net/MjAyMDEwMTdfMTcx/MDAxNjAyOTQ2MDIzMzAw.a1mEI4EpeDbk8J6sLw5CkdLqVQlDrpmoMOlCejozz7kg.JVmyla18yTNADc733cXr_-hOhQbVbhCC7xE1Bx6eBQIg.JPEG/externalFile.jpg"
                        },
                        "nick": "자스초보1"
                    }
                },
                {
                    "content": "유료전환되면서 그냥 아이피 차단된듯",
                    "id": 95746924,
                    "isArticleWriter": false,
                    "isDeleted": false,
                    "isNew": false,
                    "isRef": false,
                    "isRemovable": false,
                    "refId": 95746924,
                    "updateDate": 1593883937000,
                    "writer": {
                        "id": "iponc",
                        "image": {
                            "isAnimated": false,
                            "service": "BLOG",
                            "type": "c77_77",
                            "url": "https://blogpfthumb-phinf.pstatic.net/MjAyMDA0MDVfMjEg/MDAxNTg2MDk1NjIwMTM5.jWyPNGI8CEonXJVgBsCnrsMi_wQPcpm2LHCaHXQ1Jvcg.AwMtte359EbewqpvU0BNfeq4Ut-gbFzg2ATk-7SrK9wg.GIF.iponc/0.GIF"
                        },
                        "nick": "사냥꾼"
                    }
                },
                {
                    "content": "에? 비상업적은 ㄱㅊ은거 아니었나요",
                    "id": 95748866,
                    "isArticleWriter": false,
                    "isDeleted": false,
                    "isNew": false,
                    "isRef": true,
                    "isRemovable": false,
                    "refId": 95746924,
                    "updateDate": 1593897436000,
                    "writer": {
                        "id": "pjhmilo1",
                        "image": {
                            "service": "CAFE",
                            "type": "c77_77",
                            "url": "https://ssl.pstatic.net/static/cafe/cafe_pc/default/cafe_profile_77.png"
                        },
                        "nick": "undefined"
                    }
                },
                {
                    "content": "먼오류요",
                    "id": 95760445,
                    "isArticleWriter": false,
                    "isDeleted": false,
                    "isNew": false,
                    "isRef": false,
                    "isRemovable": false,
                    "refId": 95760445,
                    "updateDate": 1593912773000,
                    "writer": {
                        "id": "dusupia",
                        "image": {
                            "isAnimated": false,
                            "service": "CAFE",
                            "type": "c77_77",
                            "url": "https://cafethumb.pstatic.net/MjAyMDA1MDJfNzcg/MDAxNTg4NDAzMzk2Nzgw.allYgEuGb0eJ4-5rSUM-k-_F_MPCa2LRK26RSvpnjNsg.2uUy3lNSgLgc5fL-gL79j_raNb0z9u69tDziEGt_2pgg.JPEG/terrorbot.jpg"
                        },
                        "nick": "terror"
                    }
                }
            ]
        },
        "editorVersion": "LEGACY",
        "errorCode": null,
        "heads": [
            {
                "head": "메신저봇",
                "headId": 57
            },
            {
                "head": "채팅자동봇",
                "headId": 58
            },
            {
                "head": "답변 완료",
                "headId": 99
            },
            {
                "head": "카링",
                "headId": 105
            }
        ],
        "isReadOnlyMode": false,
        "isW800": true,
        "readOnlyModeInfo": {
            "emergency": false,
            "linkToNoticeURL": "https://section.cafe.naver.com/cafe-home/cafe-notice?noticeId=1650",
            "readOnlyNoticeDuration": "",
            "timeToNotice": false,
            "timeToPreNotice": false
        },
        "tags": []
    }
}