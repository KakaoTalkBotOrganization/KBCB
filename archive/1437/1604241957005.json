{
    "result": {
        "article": {
            "commentCount": 0,
            "contentElements": [],
            "contentHtml": "<p>//배포시 제작자의 이름을 표시해주세요<br />const scriptName=&quot;newBot.js&quot;;<br />const DB=DataBase;<br />const list=[0,1,2,3,4,5,6,7,8,9,&quot;a&quot;,&quot;b&quot;,&quot;c&quot;,&quot;d&quot;,&quot;e&quot;,&quot;f&quot;];<br />const list_h={a:10,b:11,c:12,d:13,e:14,f:15,A:10,B:11,C:12,D:13,E:14,F:15};<br />const list_b=[0,1]<br /><br />Date.worldTime=(str)=&gt;{<br />try {<br />var t=org.jsoup.Jsoup.connect(&quot;https://www.google.co.kr/search?q=&quot;+str+&quot;시간&quot;).get().getElementsByClass(&quot;vk_c vk_gy vk_sh card-section sL6Rbf&quot;).text().replace(/사용자 의견| +$|^ +/gm,&quot;&quot;).replace(/(?=(오전|오후)+(!?))/g,&quot;\\n&quot;).trim();<br />if (t==&quot;&quot;) return &quot;결과없어!&quot;;<br />return t;<br />}catch(e){<br />return &quot;결과없어!!&quot;;<br />}<br />}<br /><br />const readFile=(path)=&gt;{<br />var b=new java.io.File(path);<br />if(!(b.exists())) return null;<br />var c=new java.io.FileInputStream(b); <br />var d=new java.io.InputStreamReader(c);<br />var e=new java.io.BufferedReader(d);<br />var f=e.readLine();<br />var g=&quot;&quot;;<br />while((g=e.readLine())!=null){<br />f+=&quot;\\n&quot;+g;<br />}<br />c.close();<br />d.close();<br />e.close();<br />return f==null?null:String(f);<br />}<br /><br />isDec=(d)=&gt;{<br />return String(d).match(/[^0-9]/)==null;<br />}<br /><br />isHex=(h)=&gt;{<br />return String(h).match(/[^0-9a-fA-F]/)==null;<br />}<br /><br />isOct=(o)=&gt;{<br />return String(o).match(/[^0-7]/)==null;<br />}<br /><br />isBin=(b)=&gt;{<br />return String(b).match(/[^01]/)==null;<br />}<br /><br />dToH=(d)=&gt;{<br />if (!isDec(d)) return new Error(d+&quot; is not dec&quot;);<br />if (d&lt;16) return d;<br />box=[];<br />while (true) {<br />var a=d%16;<br />var d=Math.floor(d/16);<br />box.unshift(a);<br />if (d==0) break;<br />}<br />return box.map((_,s)=&gt;{<br />return list[box[s]];<br />}).join(&quot;&quot;);<br />}<br /><br />hToD=(h)=&gt;{<br />if (!isHex(h)) return new Error(h+&quot; is not hex&quot;);<br />h=String(h);<br />var box=[];<br />for (b=0;b&lt;h.length;b++) {<br />var c=h[b];<br />var c=(isNaN(c)?list_h[c]:c);<br />box.push(c*Math.pow(16,(h.length-1-b)));<br />}<br />var d=0;<br />box.map((_,s)=&gt;{<br />return d+=box[s];<br />})<br />return d;<br />}<br /><br />dToB=(d)=&gt;{<br />if (!isDec(d)) return new Error(d+&quot; is not dec&quot;);<br />if (d&lt;2) return d;<br />box=[];<br />while (true) {<br />var a=d%2;<br />var d=Math.floor(d/2);<br />box.unshift(a);<br />if (d==0) break;<br />}<br />return box.map((_,s)=&gt;{<br />return list_b[box[s]];<br />}).join(&quot;&quot;);<br />}<br /><br />bToD=(b)=&gt;{<br />if (!isBin(b)) return new Error(d+&quot; is not bin&quot;);<br />b=String(b);<br />var box=[];<br />for (a=0;a&lt;b.length;a++) {<br />var c=b[a];<br />box.push(c*Math.pow(2,(b.length-1-a)));<br />}<br />var d=0;<br />box.map((_,s)=&gt;{<br />return d+=box[s];<br />})<br />return d;<br />}<br /><br />dToO=(d)=&gt;{<br />if (!isDec(d)) return new Error(d+&quot; is not dec&quot;);<br />if (d&lt;8) return d;<br />box=[];<br />while (true) {<br />var a=d%8;<br />var d=Math.floor(d/8);<br />box.unshift(a);<br />if (d==0) break;<br />}<br />return box.map((_,s)=&gt;{<br />return list[box[s]];<br />}).join(&quot;&quot;);<br />}<br /><br />oToD=(o)=&gt;{<br />if (!isOct(o)) return new Error(d+&quot; is not oct&quot;);<br />o=String(o);<br />var box=[];<br />for (b=0;b&lt;o.length;b++) {<br />var c=o[b];<br />box.push(c*Math.pow(8,(o.length-1-b)));<br />}<br />var d=0;<br />box.map((_,s)=&gt;{<br />return d+=box[s];<br />})<br />return d;<br />}<br /><br />hanTemp=()=&gt;{<br />var a=org.jsoup.Jsoup.connect(&quot;https://www.wpws.kr/hangang/&quot;).get().body()<br />var temp=a.getElementById(&quot;temp&quot;).text();<br />var time=a.getElementById(&quot;foo2&quot;).text();<br />return temp+&quot;\\n&quot;+time;<br />}<br /><br />DataBase.set=(path,file)=&gt;{<br />return FileStream.write(path,file);<br />}<br /><br />DataBase.get=(path)=&gt;{<br />return FileStream.read(path);<br />}<br /><br />a=readFile(&quot;sdcard/katalkbot/앎슘.js&quot;);<br />eval(a);<br /><br />Device.getPhoneFilesLength=(path)=&gt;{<br />if (path==null) return null;<br />var j=java.io.File(path).listFiles();<br />var f=0;<br />var fi=0;<br />j.map((_,i)=&gt;{<br />if (j[i].isFile()) {<br />return fi++;<br />}else {<br />f++;<br />var ff=Device.getPhoneFilesLength(j[i]);<br />f+=ff[0];<br />fi+=ff[1];<br />}<br />});<br />return [f,fi];<br />}<br /><br />response=(infos)=&gt;{<br />if (readFile(&quot;sdcard/katalkbot/앎슘.js&quot;)!=a) Api.reload(scriptName);<br />var msg=infos.msg.trim();<br />var sender=infos.sender.trim();<br />var room=infos.room.trim();<br />var reply=infos.replier;<br />var real(msg,sender,room,reply,image);<br />}<br /><br />real=(chat,user,room,replier,profile)=&gt;{<br />chat.indexOf(&quot;/10-&gt;16&quot;)==0?replier.reply(dToH(chat.replace(/\\/10\\-\\&gt;16 ?/,&quot;&quot;))):0;<br />chat.indexOf(&quot;/16-&gt;10&quot;)==0?replier.reply(hToD(chat.replace(/\\/16\\-\\&gt;10 ?/,&quot;&quot;))):0;<br />chat.indexOf(&quot;/10-&gt;2&quot;)==0?replier.reply(dToB(chat.replace(/\\/10\\-\\&gt;2 ?/,&quot;&quot;))):0;<br />chat.indexOf(&quot;/2-&gt;10&quot;)==0?replier.reply(bToD(chat.replace(/\\/2\\-\\&gt;10 ?/,&quot;&quot;))):0;<br />chat.indexOf(&quot;/10-&gt;8&quot;)==0?replier.reply(dToO(chat.replace(/\\/10\\-\\&gt;8 ?/,&quot;&quot;))):0;<br />chat.indexOf(&quot;/8-&gt;10&quot;)==0?replier.reply(oToD(chat.replace(/\\/8\\-\\&gt;10 ?/,&quot;&quot;))):0;<br />switch(chat) {<br />case &quot;/newBot&quot;:<br />relier.reply(&quot;냥&quot;);<br />break;<br />case &quot;/han&quot;:<br />replier.reply(hanTemp());<br />break;<br />}<br />}</p>",
            "decorator": {
                "isPlug": false,
                "isShowSuicideSaver": false
            },
            "existScrapAddContent": false,
            "gdid": "90000004_01C2B33B0000059D00000000",
            "id": 1437,
            "isAutoSourcing": true,
            "isBlind": false,
            "isDeleteParent": false,
            "isEnableExternal": true,
            "isEnableScrap": true,
            "isEnableSocialPlugin": true,
            "isGroupPurchase": false,
            "isMarket": false,
            "isNewComment": false,
            "isNotice": false,
            "isOpen": false,
            "isPersonalTrade": false,
            "isReadable": true,
            "isWriteComment": true,
            "menu": {
                "badMenu": false,
                "badMenuByRestrict": false,
                "boardType": "L",
                "id": 143,
                "menuType": "B",
                "name": "| 소스 공유 |"
            },
            "readCount": 304,
            "refArticleId": 1437,
            "replyListOrder": "",
            "scrapCount": 0,
            "subject": "이름봇 v2 allSource",
            "template": {
                "isUse": false
            },
            "writeDate": 1553398213593,
            "writer": {
                "id": "qkralswo0825",
                "image": {
                    "isAnimated": false,
                    "service": "BLOG",
                    "type": "c77_77",
                    "url": "https://blogpfthumb-phinf.pstatic.net/MjAxODA4MjdfNzIg/MDAxNTM1Mzc0ODA1Mzcx.4fPPQyRh3gNOuCLhi__tQWMyX0gkFf03Mq0wZ377BhMg.26O6HkEnB0ZHkJ9pjOGX0MI9p-bH9ONpRk6_3gROFPIg.PNG.qkralswo0825/profileImage.png"
                },
                "memberLevelIconUrl": "https://cafe.pstatic.net/levelicon/1/13_140.gif",
                "memberLevelName": "챗봇 마스터",
                "nick": "이름을입력해주세요"
            }
        },
        "articleId": 1437,
        "attaches": [],
        "authority": {
            "isDoLike": true,
            "isEnableAttachFileDownload": true,
            "isHeadModifiable": false,
            "isModify": false,
            "isMove": false,
            "isRemove": false,
            "isReport": true,
            "isRightClick": true,
            "isSharable": true,
            "isShowLike": true,
            "isShowReply": false,
            "isShowStatistics": false,
            "isStore": false,
            "isWrite": true,
            "isWriteComment": true,
            "isWriteReply": true
        },
        "cafe": {
            "exposeReservation": false,
            "hasPopularArticle": true,
            "id": 29537083,
            "image": {
                "service": "CAFE",
                "type": "f100_100",
                "url": "https://mcafethumb-phinf.pstatic.net/MjAxOTAyMjVfMTg5/MDAxNTUxMDg2MDc1OTY2.umN5Kq9Z2sFRSdAXyJ2sz9UAlE0ofXm-dWJIRbeRbvsg.i_KxnwZ-FvDMQLnpo0ZYMo0Zl9JjOAPGWozW-WnLXJQg.PNG.wltjdqls5304/image.png"
            },
            "introduction": "자바스크립트를 사용하는 카카오톡 봇 관련 커뮤니티 입니다.",
            "isDormant": false,
            "memberCount": 5247,
            "name": "카카오톡 봇 커뮤니티",
            "openType": "O",
            "pcCafeName": "카카오톡 봇 커뮤니티",
            "url": "nameyee",
            "usingMemberLevel": true
        },
        "cafeId": 29537083,
        "comments": {
            "alarm": {
                "isChecked": false,
                "isShow": true
            },
            "disableWriteReason": "",
            "items": []
        },
        "editorVersion": "LEGACY",
        "errorCode": null,
        "heads": [
            {
                "head": "미니게임",
                "headId": 70
            },
            {
                "head": "RPG",
                "headId": 71
            },
            {
                "head": "파싱",
                "headId": 72
            },
            {
                "head": "혼합",
                "headId": 73
            },
            {
                "head": "기타",
                "headId": 74
            },
            {
                "head": "모듈",
                "headId": 80
            },
            {
                "head": "카톡봇",
                "headId": 83
            },
            {
                "head": "함수",
                "headId": 90
            },
            {
                "head": "고급",
                "headId": 101
            },
            {
                "head": "중급",
                "headId": 102
            },
            {
                "head": "초급",
                "headId": 103
            },
            {
                "head": "태그",
                "headId": 106
            }
        ],
        "isReadOnlyMode": false,
        "isW800": false,
        "readOnlyModeInfo": {
            "emergency": false,
            "linkToNoticeURL": "https://section.cafe.naver.com/cafe-home/cafe-notice?noticeId=1650",
            "readOnlyNoticeDuration": "",
            "timeToNotice": false,
            "timeToPreNotice": false
        },
        "tags": []
    }
}