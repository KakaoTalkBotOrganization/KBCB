{
    "result": {
        "article": {
            "commentCount": 6,
            "contentHtml": "<div class=\"se-viewer se-theme-default\" lang=\"ko-KR\">\n    <!-- SE_DOC_HEADER_START -->\n    <!--@CONTENTS_HEADER-->\n    <!-- SE_DOC_HEADER_END -->\n    <div class=\"se-main-container\">\n                <div class=\"se-component se-text se-l-default\" id=\"SE-56069dc5-4e62-4c6d-ad95-f5ccf22d6a5d\">\n                    <div class=\"se-component-content\">\n                        <div class=\"se-section se-section-text se-l-default\">\n                            <div class=\"se-module se-module-text\">\n\n                                    <!-- SE-TEXT { --><p class=\"se-text-paragraph se-text-paragraph-align- \" style=\"\" id=\"SE-3c2393cd-7318-4132-bb65-ffd98b8dc40a\"><span style=\"\" class=\"se-fs- se-ff-   \" id=\"SE-fcf2241c-3f37-431e-9adc-7d2c57e011b5\">본인이 작성한 코드인가요? : O</span></p><!-- } SE-TEXT --><!-- SE-TEXT { --><p class=\"se-text-paragraph se-text-paragraph-align- \" style=\"\" id=\"SE-19e6382e-9327-4ae5-bd8c-87a053be3508\"><span style=\"\" class=\"se-fs- se-ff-   \" id=\"SE-30e79184-8132-4257-8160-2430d6a4f782\">​</span></p><!-- } SE-TEXT --><!-- SE-TEXT { --><p class=\"se-text-paragraph se-text-paragraph-align- \" style=\"\" id=\"SE-f3afe9fa-1c06-4b91-9d01-a15ed3abf7c9\"><span style=\"\" class=\"se-fs- se-ff-   \" id=\"SE-e1188f60-0601-4b65-b561-50dd436d0c08\">검색 여부 : O</span></p><!-- } SE-TEXT --><!-- SE-TEXT { --><p class=\"se-text-paragraph se-text-paragraph-align- \" style=\"\" id=\"SE-a64c53bc-5762-4c81-af48-4e93e46e883d\"><span style=\"\" class=\"se-fs- se-ff-   \" id=\"SE-f8329c94-98f8-46de-baf7-550c55851868\">​</span></p><!-- } SE-TEXT --><!-- SE-TEXT { --><p class=\"se-text-paragraph se-text-paragraph-align- \" style=\"\" id=\"SE-33f15930-bcbd-448b-a7c7-f55c5078f07b\"><span style=\"\" class=\"se-fs- se-ff-   \" id=\"SE-aa176e3f-b28a-44c9-b2a9-611e14b4d5a9\">오류 내용 : 프로토타입 상속을 한 뒤 작동시킨 함수가 객체의 값을 못 바꾸거나, 속성을 못 찾겠다고 합니다.</span></p><!-- } SE-TEXT --><!-- SE-TEXT { --><p class=\"se-text-paragraph se-text-paragraph-align- \" style=\"\" id=\"SE-f3db6023-b41b-448c-a554-d0c3482e073f\"><span style=\"\" class=\"se-fs- se-ff-   \" id=\"SE-6d224f7e-1320-41ae-b71c-8ba15c95a94f\">오류 내용(몇 가지 테스트 후) : 프로토타입 상속을 한 객체의 메소드 1, 2들이...</span></p><!-- } SE-TEXT --><!-- SE-TEXT { --><p class=\"se-text-paragraph se-text-paragraph-align- \" style=\"\" id=\"SE-a058ba10-29f2-4896-a969-ef3a1a114b9a\"><span style=\"\" class=\"se-fs- se-ff-   \" id=\"SE-00b0683e-ea55-46ae-87f6-f3ccb294b4b7\">→ 1 : 객체.메소드(매개변수); 만 해도 잘 작동. this를 상속받은 객체로 제대로 인식.</span></p><!-- } SE-TEXT --><!-- SE-TEXT { --><p class=\"se-text-paragraph se-text-paragraph-align- \" style=\"\" id=\"SE-e0801bb7-471a-48de-964f-e38af1fc4640\"><span style=\"\" class=\"se-fs- se-ff-   \" id=\"SE-a3189543-cd55-41f5-90cf-58c263d165bb\">→ 2 : 객체.prototype.메소드(매개변수); 로 해야 작동. this를 상속받은 객체가 아닌 빈 객체 {}로 인식. 객체 내부에 prototype속성의 값인 {}을 this로 가져오는 것으로 추측.</span></p><!-- } SE-TEXT --><!-- SE-TEXT { --><p class=\"se-text-paragraph se-text-paragraph-align- \" style=\"\" id=\"SE-5178db77-94e2-473c-bc0d-d880fa3123c4\"><span style=\"\" class=\"se-fs- se-ff-   \" id=\"SE-21b1b729-63f1-4f1f-83d1-347f62dc09d0\">​</span></p><!-- } SE-TEXT --><!-- SE-TEXT { --><p class=\"se-text-paragraph se-text-paragraph-align- \" style=\"\" id=\"SE-572017c3-8c5f-4eb3-8214-789d76a17847\"><span style=\"\" class=\"se-fs- se-ff-   \" id=\"SE-2b622dcc-ade2-40d2-8200-12681c8ac276\"> 왜 이럴까요...? 상속을 뭔가 잘못했나요?</span></p><!-- } SE-TEXT --><!-- SE-TEXT { --><p class=\"se-text-paragraph se-text-paragraph-align- \" style=\"\" id=\"SE-5e9d0f6c-c34a-477e-b659-2954d5ce061d\"><span style=\"\" class=\"se-fs- se-ff-   \" id=\"SE-c5ce8b89-0924-4665-bc3a-115e577abfeb\">​</span></p><!-- } SE-TEXT -->\n                            </div>\n                        </div>\n                    </div>\n                </div>                <div class=\"se-component se-quotation se-l-quotation_line\" id=\"SE-c455458f-dbd8-45b3-ac67-d9ed9e7ca45b\">\n                    <div class=\"se-component-content\">\n                        <div class=\"se-section se-section-quotation se-l-quotation_line\">\n                            <blockquote class=\"se-quotation-container\">\n                                <div class=\"se-module se-module-text se-quote\"><!-- SE-TEXT { --><p class=\"se-text-paragraph se-text-paragraph-align- \" style=\"\" id=\"SE-15bc814e-7b49-456e-89c8-9499d55129b0\"><span style=\"\" class=\"se-fs- se-ff-   \" id=\"SE-d7f3a8bc-5787-4ca5-90c8-e309cf0148ad\">오류 발생 코드</span></p><!-- } SE-TEXT --></div>\n                                <div class=\"se-module se-module-text se-cite\"><p class=\"se-text-paragraph se-text-paragraph-align- \" style=\"\" id=\"SE-9525d7d3-6833-4c10-ac94-72571dca25a4\"><span style=\"\" class=\"se-fs- se-ff-   \" id=\"SE-790c2485-bded-47c2-bed5-c9d37e90a6e9\">이 아래로</span></p></div>\n                            </blockquote>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"se-component se-code se-l-code_stripe\" id=\"SE-1a7e2dad-5c7a-4671-bbc2-20ec1b05a62d\">\n                    <div class=\"se-component-content\">\n                        <div class=\"se-section se-section-code se-l-code_stripe\">\n                            <div class=\"se-module se-module-code se-fs-fs13\">\n                                <div class=\"se-code-source\">\n                                    <div class=\"__se_code_view language-javascript\">var profileModule &#x3D; {\nbaseType: function(nickName,userCode) {\nthis.code &#x3D; userCode;\nthis.name &#x3D; nickName;\nthis.job &#x3D; &quot;미배정&quot;;\nthis.point &#x3D; 100;\nthis.hp &#x3D; {\ncurr:100,\nmax:100\n};\nthis.ap &#x3D; {\ncurr:10,\nmax:10\n};\nthis.stat &#x3D; {\nstr:10,\nint:10,\nvit:10,\nmen:10,\ndex:10,\nspecial: {\nname:&quot;미정&quot;,\nvalue:0\n},\ndivisible:0\n};\nthis.condition &#x3D; &quot;평범&quot;;\nthis.isCommandAble &#x3D; true;\nthis.inventory &#x3D; [];\n}\n};\nprofileModule.baseType.prototype.save &#x3D; function(path){\nFS.write(path,JSON.stringify(this,null,&quot; &quot;));\nreturn;\n};\nprofileModule.baseType.prototype.modify &#x3D; function(key,value,valueType){\nif(key&#x3D;&#x3D;null||value&#x3D;&#x3D;null) return this;\nswitch(valueType){\ncase &#x27;number&#x27;:\nvalue &#x3D; Number(value);\nbreak;\ncase &#x27;boolean&#x27;:\nvalue &#x3D; Boolean(value);\nbreak;\ndefault:\nvalue &#x3D; String(value);\n}\nlet before;\nswitch(key){\ncase &quot;code&quot;:\nthis.code &#x3D; value;\nbreak;\ncase &quot;name&quot;:\nthis.name &#x3D; value;\nbreak;\ncase &quot;job&quot;:\nthis.job &#x3D; value;\nbreak;\ncase &quot;point&quot;:\nthis.point &#x3D; value;\nbreak;\ncase &quot;hpCurr&quot;;\nthis.hp.curr &#x3D; value;\nif(this.hp.curr &gt; this.hp.max) this.hp.curr &#x3D; Number(this.hp.max);\nbreak;\ncase &quot;hpMax&quot;:\nif(value &gt; this.hp.max) this.hp.curr +&#x3D; this.hp.max-value;\nthis.hp.max &#x3D; value;\nif(this.hp.curr &gt; this.hp.max) this.hp.curr &#x3D; Number(this.hp.max);\nbreak;\ncase &quot;apCurr&quot;:\nthis.ap.curr &#x3D; value;\nif(this.ap.curr &gt; this.ap.max) this.ap.curr &#x3D; Number(this.ap.max);\nbreak;\ncase &quot;apMax&quot;:\nif(value &gt; this.ap.max) this.ap.curr +&#x3D; this.ap.max-before;\nthis.ap.max &#x3D; value;\nif(this.ap.curr &gt; this.ap.max) this.ap.curr &#x3D; Number(this.ap.max);\nbreak;\ncase &#x27;str&#x27;:\nthis.stat.str &#x3D; value;\nbreak;\ncase &#x27;int&#x27;:\nthis.stat.int &#x3D; value;\nbreak;\ncase &#x27;vit&#x27;:\nthis.stat.vit &#x3D; value;\nthis.modify(&#x27;hpMax&#x27;,value*10,&#x27;number&#x27;);\nbreak;\ncase &#x27;men&#x27;:\nthis.stat.men &#x3D; value;\nthis.modify(&#x27;apMax&#x27;,value,&#x27;number&#x27;);\nbreak;\ncase &#x27;specialName&#x27;:\nthis.stat.special.name &#x3D; value;\nbreak;\ncase &#x27;specialValue&#x27;:\nthis.stat.special[&quot;value&quot;] &#x3D; value;\nbreak;\ncase &#x27;condition&#x27;;\nthis.condition &#x3D; value;\nbreak;\ncase &#x27;isCommandAble&#x27;:\nthis.isCommandAble &#x3D; value;\nbreak;\ncase &#x27;divisible&#x27;;\nthis.divisible &#x3D; value;\nbreak;\ndefault:\nthis[key] &#x3D; value;\n}\n\nthis.save(dbpath+&quot;playerData/&quot;+this.code+&quot;.json&quot;);\nreturn this;\n};\n//name이나 job같은 경우는 값이 안 바뀌고, 연산이 들어가는 hp, ap는 hp.max, hp.curr, ap.curr 등을 찾지 못하겠다고 뜹니다.(cannot read property &quot;max&quot; from undefined)\n//+추가로 테스트해본 결과, save함수가 새로운 파일을 만들고 그곳에 저장했습니다. this가 user을 가리키지 않는 듯합니다. 왜일까요?\nif(msg&#x3D;&#x3D;&quot;테스트&quot;) {\nuser.prototype.modify(&#x27;hpMax&#x27;,150,&#x27;number&#x27;);\n}//명령어 입력시 해당 에러발생</div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <script type=\"text/data\" class=\"__se_module_data\" data-module='{\"type\":\"v2_code\", \"id\" : \"SE-1a7e2dad-5c7a-4671-bbc2-20ec1b05a62d\"}'></script>\n                </div>                <div class=\"se-component se-quotation se-l-quotation_line\" id=\"SE-1a2ae23e-6402-4886-b436-a3cdfb15048b\">\n                    <div class=\"se-component-content\">\n                        <div class=\"se-section se-section-quotation se-l-quotation_line\">\n                            <blockquote class=\"se-quotation-container\">\n                                <div class=\"se-module se-module-text se-quote\"><!-- SE-TEXT { --><p class=\"se-text-paragraph se-text-paragraph-align- \" style=\"\" id=\"SE-b89ebd30-7c20-4797-9699-ca8da741e827\"><span style=\"\" class=\"se-fs- se-ff-   \" id=\"SE-e499030a-7617-48fa-bfc1-9a37ea3b026f\">+덤</span></p><!-- } SE-TEXT --></div>\n                                <div class=\"se-module se-module-text se-cite\"><p class=\"se-text-paragraph se-text-paragraph-align- \" style=\"\" id=\"SE-5f853a5a-54a8-4c78-abbe-9f5cd2ba20b6\"><span style=\"\" class=\"se-fs- se-ff-   \" id=\"SE-44aefbee-1770-4039-b061-d8b305f66b0d\">오류...?</span></p></div>\n                            </blockquote>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"se-component se-text se-l-default\" id=\"SE-5628b461-b56a-4f9e-ac45-72306b4689e6\">\n                    <div class=\"se-component-content\">\n                        <div class=\"se-section se-section-text se-l-default\">\n                            <div class=\"se-module se-module-text\">\n\n                                    <!-- SE-TEXT { --><p class=\"se-text-paragraph se-text-paragraph-align- \" style=\"\" id=\"SE-a05a1edc-c2e5-4e04-995a-4e83fddb7083\"><span style=\"\" class=\"se-fs- se-ff-   \" id=\"SE-74b2ddbb-ebfa-4d7a-8e0c-fafea1bf8359\">var test &#x3D; {};</span></p><!-- } SE-TEXT --><!-- SE-TEXT { --><p class=\"se-text-paragraph se-text-paragraph-align- \" style=\"\" id=\"SE-492eeb1b-1a12-4495-8105-765233799502\"><span style=\"\" class=\"se-fs- se-ff-   \" id=\"SE-e5074860-48e3-4d9c-ae2e-be6e32a24d69\">test.prototype.testing &#x3D; function(){</span></p><!-- } SE-TEXT --><!-- SE-TEXT { --><p class=\"se-text-paragraph se-text-paragraph-align- \" style=\"\" id=\"SE-af80c4de-9762-4bef-a202-327d5416fd92\"><span style=\"\" class=\"se-fs- se-ff-   \" id=\"SE-14f719ce-4f00-4ed8-83a5-05d741a9d81d\">  return this;</span></p><!-- } SE-TEXT --><!-- SE-TEXT { --><p class=\"se-text-paragraph se-text-paragraph-align- \" style=\"\" id=\"SE-ba213d2f-d75e-4d43-ae4c-0ceb461c6895\"><span style=\"\" class=\"se-fs- se-ff-   \" id=\"SE-a1d31c45-53c8-4cc0-a7b2-3a1bb6bb9139\">};</span></p><!-- } SE-TEXT --><!-- SE-TEXT { --><p class=\"se-text-paragraph se-text-paragraph-align- \" style=\"\" id=\"SE-af246505-0e9f-46cf-b05b-d442e3ac9ab2\"><span style=\"\" class=\"se-fs- se-ff-   \" id=\"SE-cf7937b1-8984-496b-8b59-d1e95140430f\">//this의 범위가 잘못됐나? 정말정말 혹시 싶어서 테스트</span></p><!-- } SE-TEXT --><!-- SE-TEXT { --><p class=\"se-text-paragraph se-text-paragraph-align- \" style=\"\" id=\"SE-331e4962-ccda-4d75-84a5-83d360eb1475\"><span style=\"\" class=\"se-fs- se-ff-   \" id=\"SE-610f3a63-083e-4d80-b6b3-30771221cf3f\">​</span></p><!-- } SE-TEXT --><!-- SE-TEXT { --><p class=\"se-text-paragraph se-text-paragraph-align- \" style=\"\" id=\"SE-53dac6ce-5fda-4165-88c6-ecf500692c6c\"><span style=\"\" class=\"se-fs- se-ff-   \" id=\"SE-92fc4cf5-fffa-41f2-a244-f4283595bdb5\">//······하려고 했는데 → 컴파일 에러 : test에 testing 속성을 추가할 수 없습니다.</span></p><!-- } SE-TEXT --><!-- SE-TEXT { --><p class=\"se-text-paragraph se-text-paragraph-align- \" style=\"\" id=\"SE-e0447269-27f3-4edc-b9fc-779fadaabef9\"><span style=\"\" class=\"se-fs- se-ff-   \" id=\"SE-f79a8faf-8731-438b-a123-49a9b083fe8c\">​</span></p><!-- } SE-TEXT -->\n                            </div>\n                        </div>\n                    </div>\n                </div>    </div>\n</div>",
            "customElements": [],
            "decorator": {
                "articleForm": {},
                "isPlug": false,
                "isShowSuicideSaver": false
            },
            "existScrapAddContent": false,
            "gdid": "90000004_01C2B33B0000698D00000000",
            "head": "답변 완료",
            "headId": 99,
            "id": 27021,
            "isAutoSourcing": true,
            "isBlind": false,
            "isDeleteParent": false,
            "isEnableExternal": true,
            "isEnableScrap": true,
            "isEnableSocialPlugin": true,
            "isGroupPurchase": false,
            "isMarket": false,
            "isNewComment": true,
            "isNotice": false,
            "isOpen": true,
            "isPersonalTrade": false,
            "isReadable": true,
            "isWriteComment": true,
            "menu": {
                "badMenu": false,
                "badMenuByRestrict": false,
                "boardType": "L",
                "id": 3,
                "menuType": "B",
                "name": "| 소스 질문 |"
            },
            "readCount": 57,
            "refArticleId": 27021,
            "replyListOrder": "",
            "scrapCount": 0,
            "subject": "프로토타입 상속 - choi님 감사합니다!",
            "template": {
                "isUse": false
            },
            "writeDate": 1604164591050,
            "writer": {
                "id": "elruien0604",
                "image": {
                    "isAnimated": false,
                    "service": "BLOG",
                    "type": "c77_77",
                    "url": "https://blogpfthumb-phinf.pstatic.net/MjAxOTExMjZfMTM2/MDAxNTc0Njk3NDIwODA0.B_yWxYktcQ2ZbBt5Ml8lF1OGD8QPMgd4G66fDpoXLfYg.VY05MqvVrF3X1pJ5MAOW4rv5HwpDN_UJk5wzP1NdM5wg.JPEG.elruien0604/profileImage.jpg"
                },
                "memberLevelIconUrl": "https://cafe.pstatic.net/levelicon/1/13_120.gif",
                "memberLevelName": "챗봇 중수",
                "nick": "Iloahs Koine"
            }
        },
        "articleId": 27021,
        "attaches": [],
        "authority": {
            "isDoLike": true,
            "isEnableAttachFileDownload": true,
            "isHeadModifiable": false,
            "isModify": false,
            "isMove": false,
            "isRemove": false,
            "isReport": true,
            "isRightClick": true,
            "isSharable": true,
            "isShowLike": true,
            "isShowReply": false,
            "isShowStatistics": false,
            "isStore": false,
            "isWrite": true,
            "isWriteComment": true,
            "isWriteReply": true
        },
        "cafe": {
            "exposeReservation": false,
            "hasPopularArticle": true,
            "id": 29537083,
            "image": {
                "service": "CAFE",
                "type": "f100_100",
                "url": "https://mcafethumb-phinf.pstatic.net/MjAxOTAyMjVfMTg5/MDAxNTUxMDg2MDc1OTY2.umN5Kq9Z2sFRSdAXyJ2sz9UAlE0ofXm-dWJIRbeRbvsg.i_KxnwZ-FvDMQLnpo0ZYMo0Zl9JjOAPGWozW-WnLXJQg.PNG.wltjdqls5304/image.png"
            },
            "introduction": "자바스크립트를 사용하는 카카오톡 봇 관련 커뮤니티 입니다.",
            "isDormant": false,
            "memberCount": 5249,
            "name": "카카오톡 봇 커뮤니티",
            "openType": "O",
            "pcCafeName": "카카오톡 봇 커뮤니티",
            "url": "nameyee",
            "usingMemberLevel": true
        },
        "cafeId": 29537083,
        "comments": {
            "alarm": {
                "isChecked": false,
                "isShow": true
            },
            "disableWriteReason": "",
            "items": [
                {
                    "content": "객체에 상속 시키려면 __proto__ 또는 Object.create 를 사용하셔야 할텐데요..?",
                    "id": 107632939,
                    "isArticleWriter": false,
                    "isDeleted": false,
                    "isNew": true,
                    "isRef": false,
                    "isRemovable": false,
                    "refId": 107632939,
                    "updateDate": 1604196235000,
                    "writer": {
                        "id": "choi0108-",
                        "image": {
                            "service": "CAFE",
                            "type": "c77_77",
                            "url": "https://ssl.pstatic.net/static/cafe/cafe_pc/default/cafe_profile_77.png"
                        },
                        "nick": "cho"
                    }
                },
                {
                    "content": "prototype은 생성자 함수 상속에 사용한다도 알고 있습니다.",
                    "id": 107632978,
                    "isArticleWriter": false,
                    "isDeleted": false,
                    "isNew": true,
                    "isRef": true,
                    "isRemovable": false,
                    "refId": 107632939,
                    "updateDate": 1604196267000,
                    "writer": {
                        "id": "choi0108-",
                        "image": {
                            "service": "CAFE",
                            "type": "c77_77",
                            "url": "https://ssl.pstatic.net/static/cafe/cafe_pc/default/cafe_profile_77.png"
                        },
                        "nick": "cho"
                    }
                },
                {
                    "content": "function newObject(){\r\n//대충 생성자 함수\r\n}\r\nnewObject.prototype.example1 = function(){return this;};\r\nnewObject.prototype.example2 = function(){return this;};\r\n\r\nvar a = JSON.parse(FileStream.read(경로));\r\n//Json파일에서 객체 로드 _ 예시로 {\"샘플\":\"예시\"}\r\na.prototype = Object.create(newObject.prototype);\r\n//프로토타입 속성(객체) 상속\r\n\r\nvar b = JSON.stringify(a.example1());\r\n//{\"샘플\":\"예시\":} _ this => Json에서 불러온 객체\r\nvar c = JSON.stringify(a.example2());\r\n//c = {}. this가 prototype속성\r\n\r\n\r\n이렇게 돼서요...ㅠㅠ\r\nvar a = Object.create(생성자 함수의 프로토타입 객체);\r\n를 먼저 하고 그 다음에 Json불러오기로 Object.create나 a._proto_로 상속시키면 프로토타입 속성과 Json으로 불러온 객체의 속성들을 모두 가질 수 있을까요?\r\n\r\n→ 상속을 두 번 하려면... \r\n\r\n→ 아예 Json파일을 로드하는 새로운 생성자 함수 B를 만들고 B에 기존의 생성자 함수의 프로토타입을 상속시킨 뒤 a = new B(경로)를 해서 한 번의 선언과 상속으로 하게 할까도 생각해봤지만... 아직 해보지는 않았어요.",
                    "id": 107636995,
                    "isArticleWriter": true,
                    "isDeleted": false,
                    "isNew": true,
                    "isRef": true,
                    "isRemovable": false,
                    "refId": 107632939,
                    "updateDate": 1604200640000,
                    "writer": {
                        "id": "elruien0604",
                        "image": {
                            "isAnimated": false,
                            "service": "BLOG",
                            "type": "c77_77",
                            "url": "https://blogpfthumb-phinf.pstatic.net/MjAxOTExMjZfMTM2/MDAxNTc0Njk3NDIwODA0.B_yWxYktcQ2ZbBt5Ml8lF1OGD8QPMgd4G66fDpoXLfYg.VY05MqvVrF3X1pJ5MAOW4rv5HwpDN_UJk5wzP1NdM5wg.JPEG.elruien0604/profileImage.jpg"
                        },
                        "nick": "Iloahs Koine"
                    }
                },
                {
                    "content": "아... 일반 객체가 아닌 (생성자)함수에만 상속이 가능한 건가요?",
                    "id": 107637767,
                    "isArticleWriter": true,
                    "isDeleted": false,
                    "isNew": true,
                    "isRef": true,
                    "isRemovable": false,
                    "refId": 107632939,
                    "replyMember": {
                        "id": "choi0108-",
                        "nick": "cho"
                    },
                    "updateDate": 1604200961000,
                    "writer": {
                        "id": "elruien0604",
                        "image": {
                            "isAnimated": false,
                            "service": "BLOG",
                            "type": "c77_77",
                            "url": "https://blogpfthumb-phinf.pstatic.net/MjAxOTExMjZfMTM2/MDAxNTc0Njk3NDIwODA0.B_yWxYktcQ2ZbBt5Ml8lF1OGD8QPMgd4G66fDpoXLfYg.VY05MqvVrF3X1pJ5MAOW4rv5HwpDN_UJk5wzP1NdM5wg.JPEG.elruien0604/profileImage.jpg"
                        },
                        "nick": "Iloahs Koine"
                    }
                },
                {
                    "content": "일반 객체에는 prototype으로 상속을 시킬수는 없는걸로 알고 있습니다.\n굳이 상속을 두번 하려면 Object.assign 으로 상속시킬 두 객체를 합쳐서 상속을 시키거나\n상속을 시킬 객체에 다른 객체를 상속시키는 방법이 있겠네요",
                    "id": 107644655,
                    "isArticleWriter": false,
                    "isDeleted": false,
                    "isNew": true,
                    "isRef": true,
                    "isRemovable": false,
                    "refId": 107632939,
                    "replyMember": {
                        "id": "elruien0604",
                        "nick": "Iloahs Koine"
                    },
                    "updateDate": 1604207584000,
                    "writer": {
                        "id": "choi0108-",
                        "image": {
                            "service": "CAFE",
                            "type": "c77_77",
                            "url": "https://ssl.pstatic.net/static/cafe/cafe_pc/default/cafe_profile_77.png"
                        },
                        "nick": "cho"
                    }
                },
                {
                    "content": "Json으로 로드한 후에 Object.assign(로드한 객체,프로토타입 속성)으로 하니까 됐어요! 감사합니다~",
                    "id": 107650320,
                    "isArticleWriter": true,
                    "isDeleted": false,
                    "isNew": true,
                    "isRef": true,
                    "isRemovable": false,
                    "refId": 107632939,
                    "replyMember": {
                        "id": "choi0108-",
                        "nick": "cho"
                    },
                    "updateDate": 1604213101000,
                    "writer": {
                        "id": "elruien0604",
                        "image": {
                            "isAnimated": false,
                            "service": "BLOG",
                            "type": "c77_77",
                            "url": "https://blogpfthumb-phinf.pstatic.net/MjAxOTExMjZfMTM2/MDAxNTc0Njk3NDIwODA0.B_yWxYktcQ2ZbBt5Ml8lF1OGD8QPMgd4G66fDpoXLfYg.VY05MqvVrF3X1pJ5MAOW4rv5HwpDN_UJk5wzP1NdM5wg.JPEG.elruien0604/profileImage.jpg"
                        },
                        "nick": "Iloahs Koine"
                    }
                }
            ]
        },
        "editorVersion": "SE_ONE",
        "errorCode": null,
        "heads": [
            {
                "head": "메신저봇",
                "headId": 57
            },
            {
                "head": "채팅자동봇",
                "headId": 58
            },
            {
                "head": "답변 완료",
                "headId": 99
            },
            {
                "head": "카링",
                "headId": 105
            }
        ],
        "isReadOnlyMode": false,
        "isW800": true,
        "readOnlyModeInfo": {
            "emergency": false,
            "linkToNoticeURL": "https://section.cafe.naver.com/cafe-home/cafe-notice?noticeId=1650",
            "readOnlyNoticeDuration": "",
            "timeToNotice": false,
            "timeToPreNotice": false
        },
        "tags": []
    }
}