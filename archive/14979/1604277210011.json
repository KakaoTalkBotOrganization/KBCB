{
    "result": {
        "article": {
            "commentCount": 2,
            "contentElements": [],
            "contentHtml": "<div style=\"font-size:9pt;\"><div><span style=\"font-size: 10pt; font-family: Arial;\">response 함수에서 메시지를 받았을때, 다른 스크립트에서 특정 시간에 예약한 작업이 있다면 실행시켜주는 스크립트입니다.</span></div><div><font face=\"Arial\">외부 js 스크립트에 브릿지를 연결하여 scheduleTrigger 함수를 실행시키는 방식입니다.</font></div><div><span style=\"font-size: 10pt; font-family: Arial;\"><br /></span></div><div><font face=\"Arial\">자세한 사용 방법과 설명은 첨부파일을 확인해 주세요.&nbsp;</font></div><div><font face=\"Arial\"><br /></font></div><div><font face=\"Arial\"><br /></font></div><div><span style=\"font-size: 10pt; font-family: Arial;\"><br /></span></div><div><span style=\"font-size: 10pt; font-family: Arial;\">(카페에 복붙하니 너무 길어서 폰트를 작게 했습니다)</span></div><div><span style=\"font-size: 7pt; font-family: Arial;\">const scriptName = &quot;SemiautomaticTaskScheduler-Public.js&quot;;</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">var TargetScript = [];</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">var ScheduledTime = [];</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">var ToExecute = [];</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">var newestReplier = null;</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">var isReseted = false;</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">var waitInMillisecond = 35000;</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">var isAssignedTaskRunning = false;</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">var seco = 0;</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">var minu = 0;</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">var hour = 0;</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">var date = 0;</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">var mont = 0;</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">var year = 0;</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">var day = &quot;SUN&quot;;</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">// 외부 컨트롤러</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">function register(requestTo, AtTime) {</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; TargetScript.push(requestTo);</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; ScheduledTime.push(AtTime);</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">}</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">function deregister(requestTo, AtTime) {</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; TargetScript.splice(TargetScript.indexOf(requestTo), 1);</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; ScheduledTime.push(TargetScript.indexOf(requestTo), 1);</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">}</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">function setWaitTime(rate) {</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; isAssignedTaskRunning = rate;</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">}</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">// 작동 코드</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">function response(room, msg, sender, isGroupChat, replier, ImageDB, packageName, threadId){</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; newestReplier = replier;</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; if (msg.equals(&quot;/반자동태스크스케줄러강제초기화&quot;)) {</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; </span><span style=\"white-space: pre; font-family: Arial; font-size: 7pt;\"> </span><span style=\"font-family: Arial; font-size: 7pt;\">reset(true);</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; }</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; reset(false);</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; if (!isAssignedTaskRunning) {</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; &nbsp; &nbsp; checkCurrentTimeAndExecute();</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; }</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">}</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">function reset(override){</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; if (!isReseted || override) {</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; &nbsp; &nbsp; isAssignedTaskRunning = false;</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; </span><span style=\"white-space: pre; font-family: Arial; font-size: 7pt;\"> </span><span style=\"font-family: Arial; font-size: 7pt;\">isReseted = true;</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; &nbsp; &nbsp; TargetScript = [];</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; &nbsp; &nbsp; ScheduledTime = [];</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; &nbsp; &nbsp; ToExecute = [];</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; }</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">}</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">function queryScheduledTasks() {</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; if (ScheduledTime.length &gt; 0) {</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; &nbsp; &nbsp; for(var i = 0; i &lt; ScheduledTime.length; i++) {</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; let timeParse = ScheduledTime[i].split(&quot;/&quot;);</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (timeParse[0].equals(&quot;xx&quot;) || timeParse[0] == seco) {</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (timeParse[1].equals(&quot;xx&quot;) || timeParse[1] == minu) {</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (timeParse[2].equals(&quot;xx&quot;) || timeParse[2] == hour) {</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (timeParse[3].equals(&quot;xx&quot;) || timeParse[3] == date) {</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (timeParse[4].equals(&quot;xx&quot;) || timeParse[4] == mont) {</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (timeParse[5].equals(&quot;xx&quot;) || timeParse[5] == year) {</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if (timeParse[6].equals(&quot;xxx&quot;) || timeParse[6].equals(day)) {</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; ToExecute.push(TargetScript[i]);</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; }</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; &nbsp; &nbsp; }</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; }</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">}</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">function checkCurrentTimeAndExecute() {</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; isAssignedTaskRunning = false;</span></div><div><span style=\"white-space: pre; font-family: Arial; font-size: 7pt;\"> </span><span style=\"font-family: Arial; font-size: 7pt;\">let now = new Date();</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; seco = now.getSeconds();</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; minu = now.getMinutes();</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; hour = now.getHours();</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; date = now.getDate();</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; mont = now.getMonth();</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; year = now.getYear() - 100;</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; switch(now.getDay()){</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; &nbsp; &nbsp; case 0:</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; day = &quot;SUN&quot;;</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; &nbsp; &nbsp; case 1:</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; day = &quot;MON&quot;;</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; &nbsp; &nbsp; case 2:</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; day = &quot;TUE&quot;;</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; &nbsp; &nbsp; case 3:</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; day = &quot;WED&quot;;</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; &nbsp; &nbsp; case 4:</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; day = &quot;THU&quot;;</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; &nbsp; &nbsp; case 5:</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; day = &quot;FRI&quot;;</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; &nbsp; &nbsp; case 6:</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; day = &quot;SAT&quot;;</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; break;</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; &nbsp; &nbsp; default:</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; day = &quot;MON&quot;;</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; }</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; queryScheduledTasks();</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; for(var i = 0; i &lt; ToExecute.length; i++) {</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; &nbsp; &nbsp; try{</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Bridge.getScopeOf(ToExecute[i] + &quot;.js&quot;).scheduleTrigger(newestReplier);</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; &nbsp; &nbsp; }catch(e) {</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; let suffix = &quot;Error Task: &quot; + ToExecute[i] + &quot;\\nError Type: &quot; + e.name + &quot;\\nError Message: &quot; + e.message + &quot;\\nError Line: &quot; + String(Number(e.lineNumber) + 1);</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; newestReplier.reply(&quot;Error while running assigned task.\\n\\n&quot; + suffix);</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; &nbsp; &nbsp; }</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; }</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; ToExecute = [];</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; java.lang.Thread.sleep(waitInMillisecond);</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">&nbsp; &nbsp; isAssignedTaskRunning = false;</span></div><div><span style=\"font-family: Arial; font-size: 7pt;\">}</span></div></div>",
            "decorator": {
                "isPlug": false,
                "isShowSuicideSaver": false
            },
            "existScrapAddContent": false,
            "gdid": "90000004_01C2B33B00003A8300000000",
            "id": 14979,
            "isAutoSourcing": false,
            "isBlind": false,
            "isDeleteParent": false,
            "isEnableExternal": true,
            "isEnableScrap": true,
            "isEnableSocialPlugin": true,
            "isGroupPurchase": false,
            "isMarket": false,
            "isNewComment": false,
            "isNotice": false,
            "isOpen": true,
            "isPersonalTrade": false,
            "isReadable": true,
            "isWriteComment": true,
            "menu": {
                "badMenu": false,
                "badMenuByRestrict": false,
                "boardType": "L",
                "id": 143,
                "menuType": "B",
                "name": "| 소스 공유 |"
            },
            "readCount": 171,
            "refArticleId": 14979,
            "replyListOrder": "",
            "scrapCount": 1,
            "subject": "메시지를 받았을때 지정된 시간의 예약된 작업을 실행시켜주는 소스",
            "template": {
                "isUse": false
            },
            "writeDate": 1585811639273,
            "writer": {
                "id": "nahroo",
                "image": {
                    "service": "CAFE",
                    "type": "c77_77",
                    "url": "https://ssl.pstatic.net/static/cafe/cafe_pc/default/cafe_profile_77.png"
                },
                "memberLevelIconUrl": "",
                "memberLevelName": "",
                "nick": "410"
            }
        },
        "articleId": 14979,
        "attaches": [
            {
                "extension": "js",
                "fullName": "SemiautomaticTaskScheduler-Public.js",
                "hasCopyrightIssue": false,
                "hasLicenseIssue": false,
                "isBlind": false,
                "isInfected": false,
                "name": "SemiautomaticTa...eduler-Public.js",
                "size": 5400,
                "suspendLayerName": "block_common",
                "type": "F",
                "url": "https://cafeattach.naver.net/f461e85c4e7f7ecbe60265516384ff8e2e7c82ed/20200402_58_cafefile/29537083_1585811625958_jG3yER_js/SemiautomaticTaskScheduler-Public.js?type=attachment"
            }
        ],
        "authority": {
            "isDoLike": true,
            "isEnableAttachFileDownload": true,
            "isHeadModifiable": false,
            "isModify": false,
            "isMove": false,
            "isRemove": false,
            "isReport": true,
            "isRightClick": true,
            "isSharable": true,
            "isShowLike": true,
            "isShowReply": false,
            "isShowStatistics": false,
            "isStore": false,
            "isWrite": true,
            "isWriteComment": true,
            "isWriteReply": true
        },
        "cafe": {
            "exposeReservation": false,
            "hasPopularArticle": true,
            "id": 29537083,
            "image": {
                "service": "CAFE",
                "type": "f100_100",
                "url": "https://mcafethumb-phinf.pstatic.net/MjAxOTAyMjVfMTg5/MDAxNTUxMDg2MDc1OTY2.umN5Kq9Z2sFRSdAXyJ2sz9UAlE0ofXm-dWJIRbeRbvsg.i_KxnwZ-FvDMQLnpo0ZYMo0Zl9JjOAPGWozW-WnLXJQg.PNG.wltjdqls5304/image.png"
            },
            "introduction": "자바스크립트를 사용하는 카카오톡 봇 관련 커뮤니티 입니다.",
            "isDormant": false,
            "memberCount": 5248,
            "name": "카카오톡 봇 커뮤니티",
            "openType": "O",
            "pcCafeName": "카카오톡 봇 커뮤니티",
            "url": "nameyee",
            "usingMemberLevel": true
        },
        "cafeId": 29537083,
        "comments": {
            "alarm": {
                "isChecked": false,
                "isShow": true
            },
            "disableWriteReason": "",
            "items": [
                {
                    "content": "와우",
                    "id": 86165109,
                    "isArticleWriter": false,
                    "isDeleted": false,
                    "isNew": false,
                    "isRef": false,
                    "isRemovable": false,
                    "refId": 86165109,
                    "updateDate": 1585812015000,
                    "writer": {
                        "id": "sungbin_dev",
                        "image": {
                            "isAnimated": false,
                            "service": "CAFE",
                            "type": "c77_77",
                            "url": "https://cafethumb.pstatic.net/MjAyMDEwMzBfMzUg/MDAxNjA0MDMwMDYwNzM5.kjePgFoxEs7f_8UwkpF6JtLFx2dFUz9gNtlwgrEPzwEg.agBPDgSw14rZWK1sN50QMz9ncBqE0I9DIq22M9ESoE4g.PNG/z.png"
                        },
                        "nick": "성빈"
                    }
                },
                {
                    "content": "히익 중괄호가",
                    "id": 86170771,
                    "isArticleWriter": false,
                    "isDeleted": false,
                    "isNew": false,
                    "isRef": false,
                    "isRemovable": false,
                    "refId": 86170771,
                    "updateDate": 1585816100000,
                    "writer": {
                        "id": "yhs-1277",
                        "image": {
                            "isAnimated": false,
                            "service": "CAFE",
                            "type": "c77_77",
                            "url": "https://cafethumb.pstatic.net/MjAyMDA3MTdfMTQw/MDAxNTk0OTUyMjYxODA3.xcvWljLE4GIaPWSmvMcj3BPaQ8CJo_v_bvusZF1n8VAg.x0BNuQ4IClVCe3jsSBeaitUR4t6DJS2P-RB6MBtfwxcg.JPEG/externalFile.jpg"
                        },
                        "nick": "SP"
                    }
                }
            ]
        },
        "editorVersion": "LEGACY",
        "errorCode": null,
        "heads": [
            {
                "head": "미니게임",
                "headId": 70
            },
            {
                "head": "RPG",
                "headId": 71
            },
            {
                "head": "파싱",
                "headId": 72
            },
            {
                "head": "혼합",
                "headId": 73
            },
            {
                "head": "기타",
                "headId": 74
            },
            {
                "head": "모듈",
                "headId": 80
            },
            {
                "head": "카톡봇",
                "headId": 83
            },
            {
                "head": "함수",
                "headId": 90
            },
            {
                "head": "고급",
                "headId": 101
            },
            {
                "head": "중급",
                "headId": 102
            },
            {
                "head": "초급",
                "headId": 103
            },
            {
                "head": "태그",
                "headId": 106
            }
        ],
        "isReadOnlyMode": false,
        "isW800": true,
        "readOnlyModeInfo": {
            "emergency": false,
            "linkToNoticeURL": "https://section.cafe.naver.com/cafe-home/cafe-notice?noticeId=1650",
            "readOnlyNoticeDuration": "",
            "timeToNotice": false,
            "timeToPreNotice": false
        },
        "tags": []
    }
}